{"version":3,"file":"makelab.graphics.js","sources":["../src/lib/math/math-utils.js","../src/lib/graphics/color-utils.js","../src/lib/math/vector.js","../src/lib/graphics/line-segment.js"],"sourcesContent":["/**\n * Converts degrees to radians.\n *\n * @param {number} degrees - The angle in degrees to be converted to radians.\n * @returns {number} The angle in radians.\n */\nexport function convertToRadians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\n/**\n * Converts an angle from radians to degrees.\n *\n * @param {number} radians - The angle in radians to be converted.\n * @returns {number} The angle in degrees.\n */\nexport function convertToDegrees(radians) {\n  return radians * (180 / Math.PI);\n}\n\n/**\n * Linearly interpolates between two values.\n *\n * @param {number} start - The starting value.\n * @param {number} end - The ending value.\n * @param {number} amt - The interpolation amount (0-1).\n * @returns {number} The interpolated value.\n */\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end;\n}\n\n/**\n * Generates a random number within a specified range (similar to p5js random)\n * If only one argument is provided, it generates a number between 0 and the argument.\n * If two arguments are provided, it generates a number between the two arguments.\n * \n * @param {number} min - The minimum value (inclusive) or the maximum value if only one argument is provided.\n * @param {number} [max] - The maximum value (exclusive).\n * @returns {number} A random number within the specified range.\n */\nexport function random(min, max) {\n  if (max === undefined) {\n    max = min;\n    min = 0;\n  }\n  return Math.random() * (max - min) + min;\n}","import { lerp } from '../math/math-utils.js';\n\n/**\n * Linearly interpolates between two colors.\n *\n * @param {Object|string} startColor - The starting color. Can be an object with r, g, b, and \n *  optionally alpha fields, or a string in a valid CSS color format.\n * @param {Object|string} endColor - The ending color. Can be an object with r, g, b, and \n *  optionally alpha fields, or a string in a valid CSS color format.\n * @param {number} amt - The amount to interpolate between the two colors. Should be a value between 0 and 1.\n * @returns {string} The interpolated color in rgba format.\n */\nexport function lerpColor(startColor, endColor, amt) {\n  // console.log(`lerpColor: startColor: ${startColor}, endColor: ${endColor}, amt: ${amt}`);\n\n  // Ensure both colors are objects with r, g, b, and optionally a properties\n  startColor = convertColorStringToObject(startColor);\n  endColor = convertColorStringToObject(endColor);\n\n  const r = Math.round(lerp(startColor.r, endColor.r, amt));\n  const g = Math.round(lerp(startColor.g, endColor.g, amt));\n  const b = Math.round(lerp(startColor.b, endColor.b, amt));\n  const a = lerp(startColor.a || 1, endColor.a || 1, amt); // Default to 1 if a property is missing\n\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n}\n\n/**\n * Converts a color string (hex, rgb, or rgba) to an object with r, g, b, and optionally a properties.\n * If the input is already an object, it returns the input as is.\n *\n * @param {string|Object} colorStr - The color string or object to convert.\n * @returns {Object} An object with properties r, g, b, and optionally a.\n * @throws {Error} If the color string format is invalid.\n */\nexport function convertColorStringToObject(colorStr) {\n  if (typeof colorStr === 'string') {\n    // Handle HTML color names\n    if (HTML_COLOR_NAMES[colorStr.toLowerCase()]) {\n      return HTML_COLOR_NAMES[colorStr.toLowerCase()];\n    }\n\n    // Handle hexstring, rgb, or rgba string\n    const match = colorStr.match(/^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3}|[0-9a-fA-F]{8})$/);\n    if (match) {\n      // Hexstring\n      const hex = match[1];\n      if (hex.length === 8) {\n        // 8-digit hex string with alpha\n        return {\n          r: parseInt(hex.substring(0, 2), 16),\n          g: parseInt(hex.substring(2, 4), 16),\n          b: parseInt(hex.substring(4, 6), 16),\n          a: parseInt(hex.substring(6, 8), 16) / 255\n        };\n      } else {\n        // 6-digit hex string without alpha\n        return {\n          r: parseInt(hex.substring(0, 2), 16),\n          g: parseInt(hex.substring(2, 4), 16),\n          b: parseInt(hex.substring(4, 6), 16),\n          a: 1 // Default to 1 if alpha is not specified\n        };\n      }\n    } else if (colorStr.startsWith('rgb')) {\n      // rgb or rgba string\n      //const match = colorStr.match(/rgba?\\((\\d+), (\\d+), (\\d+)(?:, (\\d*\\.?\\d+))?\\)/);\n      \n      // updated to support optional whitespace between commas\n      const match = colorStr.match(/rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?\\)/);\n      if (match) {\n        const [, r, g, b, a] = match;\n        let parsedColor = {\n          r: parseInt(r),\n          g: parseInt(g),\n          b: parseInt(b),\n          a: a !== undefined ? parseFloat(a) : 1 // Default to 1 if alpha is not specified\n        };\n        //parsedColor.a = 0.0001;\n        //console.log(`parsedColor: ${JSON.stringify(parsedColor)}`);\n        return parsedColor;\n      }\n    }\n    throw new Error(`Invalid color string: ${colorStr}`);\n  }\n\n  // If it's already an object, return it\n  return colorStr;\n}\n\nconst HTML_COLOR_NAMES = {\n  aliceblue: { r: 240, g: 248, b: 255, a: 1 },\n  antiquewhite: { r: 250, g: 235, b: 215, a: 1 },\n  aqua: { r: 0, g: 255, b: 255, a: 1 },\n  aquamarine: { r: 127, g: 255, b: 212, a: 1 },\n  azure: { r: 240, g: 255, b: 255, a: 1 },\n  beige: { r: 245, g: 245, b: 220, a: 1 },\n  bisque: { r: 255, g: 228, b: 196, a: 1 },\n  black: { r: 0, g: 0, b: 0, a: 1 },\n  blanchedalmond: { r: 255, g: 235, b: 205, a: 1 },\n  blue: { r: 0, g: 0, b: 255, a: 1 },\n  blueviolet: { r: 138, g: 43, b: 226, a: 1 },\n  brown: { r: 165, g: 42, b: 42, a: 1 },\n  burlywood: { r: 222, g: 184, b: 135, a: 1 },\n  cadetblue: { r: 95, g: 158, b: 160, a: 1 },\n  chartreuse: { r: 127, g: 255, b: 0, a: 1 },\n  chocolate: { r: 210, g: 105, b: 30, a: 1 },\n  coral: { r: 255, g: 127, b: 80, a: 1 },\n  cornflowerblue: { r: 100, g: 149, b: 237, a: 1 },\n  cornsilk: { r: 255, g: 248, b: 220, a: 1 },\n  crimson: { r: 220, g: 20, b: 60, a: 1 },\n  cyan: { r: 0, g: 255, b: 255, a: 1 },\n  darkblue: { r: 0, g: 0, b: 139, a: 1 },\n  darkcyan: { r: 0, g: 139, b: 139, a: 1 },\n  darkgoldenrod: { r: 184, g: 134, b: 11, a: 1 },\n  darkgray: { r: 169, g: 169, b: 169, a: 1 },\n  darkgreen: { r: 0, g: 100, b: 0, a: 1 },\n  darkkhaki: { r: 189, g: 183, b: 107, a: 1 },\n  darkmagenta: { r: 139, g: 0, b: 139, a: 1 },\n  darkolivegreen: { r: 85, g: 107, b: 47, a: 1 },\n  darkorange: { r: 255, g: 140, b: 0, a: 1 },\n  darkorchid: { r: 153, g: 50, b: 204, a: 1 },\n  darkred: { r: 139, g: 0, b: 0, a: 1 },\n  darksalmon: { r: 233, g: 150, b: 122, a: 1 },\n  darkseagreen: { r: 143, g: 188, b: 143, a: 1 },\n  darkslateblue: { r: 72, g: 61, b: 139, a: 1 },\n  darkslategray: { r: 47, g: 79, b: 79, a: 1 },\n  darkturquoise: { r: 0, g: 206, b: 209, a: 1 },\n  darkviolet: { r: 148, g: 0, b: 211, a: 1 },\n  deeppink: { r: 255, g: 20, b: 147, a: 1 },\n  deepskyblue: { r: 0, g: 191, b: 255, a: 1 },\n  dimgray: { r: 105, g: 105, b: 105, a: 1 },\n  dodgerblue: { r: 30, g: 144, b: 255, a: 1 },\n  firebrick: { r: 178, g: 34, b: 34, a: 1 },\n  floralwhite: { r: 255, g: 250, b: 240, a: 1 },\n  forestgreen: { r: 34, g: 139, b: 34, a: 1 },\n  fuchsia: { r: 255, g: 0, b: 255, a: 1 },\n  gainsboro: { r: 220, g: 220, b: 220, a: 1 },\n  ghostwhite: { r: 248, g: 248, b: 255, a: 1 },\n  gold: { r: 255, g: 215, b: 0, a: 1 },\n  goldenrod: { r: 218, g: 165, b: 32, a: 1 },\n  gray: { r: 128, g: 128, b: 128, a: 1 },\n  green: { r: 0, g: 128, b: 0, a: 1 },\n  greenyellow: { r: 173, g: 255, b: 47, a: 1 },\n  honeydew: { r: 240, g: 255, b: 240, a: 1 },\n  hotpink: { r: 255, g: 105, b: 180, a: 1 },\n  indianred: { r: 205, g: 92, b: 92, a: 1 },\n  indigo: { r: 75, g: 0, b: 130, a: 1 },\n  ivory: { r: 255, g: 255, b: 240, a: 1 },\n  khaki: { r: 240, g: 230, b: 140, a: 1 },\n  lavender: { r: 230, g: 230, b: 250, a: 1 },\n  lavenderblush: { r: 255, g: 240, b: 245, a: 1 },\n  lawngreen: { r: 124, g: 252, b: 0, a: 1 },\n  lemonchiffon: { r: 255, g: 250, b: 205, a: 1 },\n  lightblue: { r: 173, g: 216, b: 230, a: 1 },\n  lightcoral: { r: 240, g: 128, b: 128, a: 1 },\n  lightcyan: { r: 224, g: 255, b: 255, a: 1 },\n  lightgoldenrodyellow: { r: 250, g: 250, b: 210, a: 1 },\n  lightgray: { r: 211, g: 211, b: 211, a: 1 },\n  lightgreen: { r: 144, g: 238, b: 144, a: 1 },\n  lightpink: { r: 255, g: 182, b: 193, a: 1 },\n  lightsalmon: { r: 255, g: 160, b: 122, a: 1 },\n  lightseagreen: { r: 32, g: 178, b: 170, a: 1 },\n  lightskyblue: { r: 135, g: 206, b: 250, a: 1 },\n  lightslategray: { r: 119, g: 136, b: 153, a: 1 },\n  lightsteelblue: { r: 176, g: 196, b: 222, a: 1 },\n  lightyellow: { r: 255, g: 255, b: 224, a: 1 },\n  lime: { r: 0, g: 255, b: 0, a: 1 },\n  limegreen: { r: 50, g: 205, b: 50, a: 1 },\n  linen: { r: 250, g: 240, b: 230, a: 1 },\n  magenta: { r: 255, g: 0, b: 255, a: 1 },\n  maroon: { r: 128, g: 0, b: 0, a: 1 },\n  mediumaquamarine: { r: 102, g: 205, b: 170, a: 1 },\n  mediumblue: { r: 0, g: 0, b: 205, a: 1 },\n  mediumorchid: { r: 186, g: 85, b: 211, a: 1 },\n  mediumpurple: { r: 147, g: 112, b: 219, a: 1 },\n  mediumseagreen: { r: 60, g: 179, b: 113, a: 1 },\n  mediumslateblue: { r: 123, g: 104, b: 238, a: 1 },\n  mediumspringgreen: { r: 0, g: 250, b: 154, a: 1 },\n  mediumturquoise: { r: 72, g: 209, b: 204, a: 1 },\n  mediumvioletred: { r: 199, g: 21, b: 133, a: 1 },\n  midnightblue: { r: 25, g: 25, b: 112, a: 1 },\n  mintcream: { r: 245, g: 255, b: 250, a: 1 },\n  mistyrose: { r: 255, g: 228, b: 225, a: 1 },\n  moccasin: { r: 255, g: 228, b: 181, a: 1 },\n  navajowhite: { r: 255, g: 222, b: 173, a: 1 },\n  navy: { r: 0, g: 0, b: 128, a: 1 },\n  oldlace: { r: 253, g: 245, b: 230, a: 1 },\n  olive: { r: 128, g: 128, b: 0, a: 1 },\n  olivedrab: { r: 107, g: 142, b: 35, a: 1 },\n  orange: { r: 255, g: 165, b: 0, a: 1 },\n  orangered: { r: 255, g: 69, b: 0, a: 1 },\n  orchid: { r: 218, g: 112, b: 214, a: 1 },\n  palegoldenrod: { r: 238, g: 232, b: 170, a: 1 },\n  palegreen: { r: 152, g: 251, b: 152, a: 1 },\n  paleturquoise: { r: 175, g: 238, b: 238, a: 1 },\n  palevioletred: { r: 219, g: 112, b: 147, a: 1 },\n  papayawhip: { r: 255, g: 239, b: 213, a: 1 },\n  peachpuff: { r: 255, g: 218, b: 185, a: 1 },\n  peru: { r: 205, g: 133, b: 63, a: 1 },\n  pink: { r: 255, g: 192, b: 203, a: 1 },\n  plum: { r: 221, g: 160, b: 221, a: 1 },\n  powderblue: { r: 176, g: 224, b: 230, a: 1 },\n  purple: { r: 128, g: 0, b: 128, a: 1 },\n  rebeccapurple: { r: 102, g: 51, b: 153, a: 1 },\n  red: { r: 255, g: 0, b: 0, a: 1 },\n  rosybrown: { r: 188, g: 143, b: 143, a: 1 },\n  royalblue: { r: 65, g: 105, b: 225, a: 1 },\n  saddlebrown: { r: 139, g: 69, b: 19, a: 1 },\n  salmon: { r: 250, g: 128, b: 114, a: 1 },\n  sandybrown: { r: 244, g: 164, b: 96, a: 1 },\n  seagreen: { r: 46, g: 139, b: 87, a: 1 },\n  seashell: { r: 255, g: 245, b: 238, a: 1 },\n  sienna: { r: 160, g: 82, b: 45, a: 1 },\n  silver: { r: 192, g: 192, b: 192, a: 1 },\n  skyblue: { r: 135, g: 206, b: 235, a: 1 },\n  slateblue: { r: 106, g: 90, b: 205, a: 1 },\n  slategray: { r: 112, g: 128, b: 144, a: 1 },\n  snow: { r: 255, g: 250, b: 250, a: 1 },\n  springgreen: { r: 0, g: 255, b: 127, a: 1 },\n  steelblue: { r: 70, g: 130, b: 180, a: 1 },\n  tan: { r: 210, g: 180, b: 140, a: 1 },\n  teal: { r: 0, g: 128, b: 128, a: 1 },\n  thistle: { r: 216, g: 191, b: 216, a: 1 },\n  tomato: { r: 255, g: 99, b: 71, a: 1 },\n  turquoise: { r: 64, g: 224, b: 208, a: 1 },\n  violet: { r: 238, g: 130, b: 238, a: 1 },\n  wheat: { r: 245, g: 222, b: 179, a: 1 },\n  white: { r: 255, g: 255, b: 255, a: 1 },\n  whitesmoke: { r: 245, g: 245, b: 245, a: 1 },\n  yellow: { r: 255, g: 255, b: 0, a: 1 },\n  yellowgreen: { r: 154, g: 205, b: 50, a: 1 }\n};\n  ","/**\n * Class representing a 2D vector.\n */\nexport class Vector {\n  /**\n   * Create a vector.\n   * @param {number} x - The x coordinate.\n   * @param {number} y - The y coordinate.\n   */\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Add another vector to this vector.\n   * @param {Vector} other - The vector to add.\n   * @returns {Vector} The resulting vector.\n   */\n  add(other) {\n    return new Vector(this.x + other.x, this.y + other.y);\n  }\n\n  /**\n   * Subtract another vector from this vector.\n   * @param {Vector} other - The vector to subtract.\n   * @returns {Vector} The resulting vector.\n   */\n  subtract(other) {\n    return new Vector(this.x - other.x, this.y - other.y);\n  }\n\n  /**\n   * Multiply this vector by a scalar.\n   * @param {number} scalar - The scalar to multiply by.\n   * @returns {Vector} The resulting vector.\n   */\n  multiply(scalar) {\n    return new Vector(this.x * scalar, this.y * scalar);\n  }\n\n  /**\n   * Divide this vector by a scalar.\n   * @param {number} scalar - The scalar to divide by.\n   * @returns {Vector} The resulting vector.\n   */\n  divide(scalar) {\n    return new Vector(this.x / scalar, this.y / scalar);\n  }\n\n  /**\n   * Calculate the magnitude (length) of this vector.\n   * @returns {number} The magnitude of the vector.\n   */\n  magnitude() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  /**\n   * Normalize this vector (make it have a magnitude of 1).\n   * @returns {Vector} The normalized vector.\n   */\n  normalize() {\n    const mag = this.magnitude();\n    return new Vector(this.x / mag, this.y / mag);\n  }\n\n  /**\n   * Calculate the dot product of this vector and another vector.\n   * @param {Vector} other - The other vector.\n   * @returns {number} The dot product.\n   */\n  dotProduct(other) {\n    return this.x * other.x + this.y * other.y;\n  }\n\n  /**\n   * Calculate the angle between this vector and another vector.\n   * @param {Vector} other - The other vector.\n   * @returns {number} The angle in radians.\n   */\n  angleBetween(other) {\n    // const cosTheta = this.dotProduct(other) / (this.magnitude() * other.magnitude());\n    // return Math.acos(cosTheta);\n\n    const dotProduct = this.dotProduct(other);\n    const magnitudeProduct = this.magnitude() * other.magnitude();\n\n    // Handle parallel vectors (dotProduct ≈ magnitudeProduct)\n    if (Math.abs(dotProduct - magnitudeProduct) < Number.EPSILON) {\n      return dotProduct >= 0 ? 0 : Math.PI;\n    }\n\n    // Handle zero vectors\n    if (magnitudeProduct === 0) {\n      return 0; // Or return NaN if you prefer\n    }\n\n    const cosTheta = dotProduct / magnitudeProduct;\n    let angle = Math.acos(cosTheta);\n\n    // Use the cross product to determine the sign of the angle\n    const crossProductZ = this.x * other.y - this.y * other.x; // 2D cross product\n    if (crossProductZ < 0) {\n      angle = 2 * Math.PI - angle;\n    }\n\n    return angle;\n  }\n\n  /**\n   * Get a string representation of this vector.\n   * @returns {string} A string representation of the vector.\n   */\n  toString() {\n    return `(${this.x}, ${this.y})`;\n  }\n\n  /**\n   * Create a vector from two points.\n   * @param {Object} p1 - The first point with x and y properties.\n   * @param {Object} p2 - The second point with x and y properties.\n   * @returns {Vector} The resulting vector.\n   */\n  static fromPoints(p1, p2) {\n    return new Vector(p2.x - p1.x, p2.y - p1.y);\n  }\n}","// This library provides basic line segment functionality, including drawing\n// and vector operations\n//\n// By Jon E. Froehlich\n// UW CSE Professor\n// http://makeabilitylab.io/\n//\nimport { Vector } from '../math/vector.js';\nimport { convertToRadians, convertToDegrees } from '../math/math-utils.js';\n\nexport class LineSegment {\n  /**\n   * Creates an instance of a line segment.\n   * \n   * @constructor\n   * @param {number|object} x1 - The x-coordinate of the first point or a vector object.\n   * @param {number|object} y1 - The y-coordinate of the first point or a vector object.\n   * @param {number} [x2] - The x-coordinate of the second point (optional if x1 and y1 are vectors).\n   * @param {number} [y2] - The y-coordinate of the second point (optional if x1 and y1 are vectors).\n   */\n  constructor(x1, y1, x2, y2) {\n    //x1 and y1 can either be vectors or the points for p1\n    if (arguments.length == 2 && typeof x1 === 'object' &&\n      typeof y1 === 'object') {\n      this.pt1 = x1;\n      this.pt2 = y1;\n    } else {\n      this.pt1 = new Vector(x1, y1);\n      this.pt2 = new Vector(x2, y2);\n    }\n\n    this.fontSize = 10;\n    this.strokeColor = \"black\";\n    this.isDashedLine = false;\n    this.drawTextLabels = true;\n    this.drawTextMagnitude = true;\n    this.drawTextAngle = true;\n    this.strokeWeight = 2;\n  }\n\n  /**\n   * Returns x1\n   */\n  get x1() {\n    return this.pt1.x;\n  }\n\n  /**\n   * Set x1\n   */\n  set x1(val) {\n    this.pt1.x = val;\n  }\n\n  /**\n   * Returns y1\n   */\n  get y1() {\n    return this.pt1.y;\n  }\n\n  /**\n   * Set y1\n   */\n  set y1(val) {\n    this.pt1.y = val;\n  }\n\n  /**\n   * Returns x2\n   */\n  get x2() {\n    return this.pt2.x;\n  }\n\n  /**\n   * Set x2\n   */\n  set x2(val) {\n    this.pt2.x = val;\n  }\n\n  /**\n   * Returns y2\n   */\n  get y2() {\n    return this.pt2.y;\n  }\n\n  /**\n   * Set y2\n   */\n  set y2(val) {\n    this.pt2.y = val;\n  }\n\n  /**\n   * Returns the heading of the line segment in radians between 0 and 2*PI.\n   */\n  getHeading() {\n    const diffVector = this.pt2.subtract(this.pt1);\n    let heading = Math.atan2(diffVector.y, diffVector.x);\n\n    if (heading < 0) {\n      heading += 2 * Math.PI;\n    }\n    return heading;\n  }\n\n  /**\n   * Returns the two normals for the line segment (one normal for each direction)\n   */\n  getNormals() {\n    return calculateNormals(this.pt1, this.pt2);\n  }\n\n  /**\n   * Returns one of the normals for this line segment. To get both\n   * normals, call getNormals()\n   */\n  getNormal() {\n    return this.getNormals()[0];\n  }\n\n  /**\n   * Calculates the vector representing the line segment moved to the origin.\n   *\n   * @returns {Vector} The vector representing the line segment at the origin.\n   */\n  getVectorAtOrigin() {\n    return this.pt2.subtract(this.pt1);\n  }\n\n  /**\n   * Gets the angles between this line segment and the given vector or line segment.\n   * Returns both the counterclockwise and clockwise angles in radians.\n   *\n   * @param {Vector|LineSegment} vectorOrLineSegment The other vector or line segment.\n   * @returns {Object} An object containing both the counterclockwise and clockwise angles in radians.\n   */\n  getAnglesBetween(vectorOrLineSegment) {\n    const v1 = this.getVectorAtOrigin();\n    let v2;\n\n    if (vectorOrLineSegment instanceof LineSegment) {\n      v2 = vectorOrLineSegment.getVectorAtOrigin();\n    } else {\n      v2 = vectorOrLineSegment;\n    }\n\n    let angleBetweenRadians = v1.angleBetween(v2);\n    console.log(`angleBetweenDegrees: ${convertToDegrees(angleBetweenRadians).toFixed(1)}`);\n\n    // Ensure the angle is between 0 and 2*PI\n    if (angleBetweenRadians < 0) {\n      angleBetweenRadians += 2 * Math.PI;\n    }\n\n    // Calculate the counterclockwise and clockwise angles\n    const clockwiseAngle = angleBetweenRadians;\n    const counterclockwiseAngle = 2 * Math.PI - angleBetweenRadians;\n    \n    return {\n      counterclockwiseAngle,\n      clockwiseAngle\n    };\n  }\n\n  /**\n   * Calculates the orthogonal projection of vector p onto this line segment.\n   * \n   * @param {Vector} p The vector to project onto the line segment.\n   * @returns {Vector} The orthogonal projection of p onto the line segment.\n   */\n  getOrthogonalProjection(p) {\n    // http://mathonline.wikidot.com/orthogonal-projections\n\n    const d1 = this.pt2.subtract(this.pt1); // Direction vector of the line segment\n    const d2 = p.subtract(this.pt1); // Vector from point p to the first point of the line segment\n\n    const l1 = d1.magnitude(); // Length of the line segment\n\n    const dotProduct = Math.min(Math.max(d2.dotProduct(d1.normalize()), 0), l1); // Constrain dot product between 0 and l1\n\n    return this.pt1.add(d1.multiply(dotProduct)); // Project p onto the line segment\n  }\n\n  /**\n   * Returns the minimum distance between this line segment and the given point p.\n   * \n   * @param {Vector} p The point to calculate the distance to.\n   * @returns {number} The minimum distance between the line segment and the point.\n   */\n  getDistance(p) {\n    const op = this.getOrthogonalProjection(p);\n    return p.subtract(op).magnitude();\n  }\n\n  /**\n   * Returns the magnitude of this vector as a floating point number.\n   * \n   * @returns {number} The magnitude of the line segment.\n   */\n  getMagnitude() {\n    return this.pt2.subtract(this.pt1).magnitude();\n  }\n\n  /**\n   * Sets the magnitude of the line segment to the given number.\n   * \n   * @param {number} len The desired magnitude of the line segment.\n   */\n  setMagnitude(len) {\n    const diffVector = this.pt2.subtract(this.pt1).normalize().multiply(len);\n    this.pt2 = this.pt1.add(diffVector);\n  }\n\n  /**\n   * Draws the line segment on the provided canvas context.\n   * \n   * @param {CanvasRenderingContext2D} ctx - The canvas rendering context to draw on.\n   */\n  draw(ctx) {\n    ctx.strokeStyle = this.strokeColor;\n    ctx.lineWidth = this.strokeWeight;\n  \n    if (this.isDashedLine) {\n      ctx.setLineDash([5, 15]);\n    }\n  \n    this.drawArrow(ctx, this.pt1, this.pt2.subtract(this.pt1), this.strokeColor); \n  \n    // Draw text labels (optional)\n    if (this.drawTextLabels) {\n      ctx.font = `${this.fontSize}px Arial`; // Replace with your desired font and size\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"top\";\n      ctx.fillStyle = this.strokeColor; // Or any other desired color\n  \n      const label = this.generateLabel();\n      const labelWidth = ctx.measureText(label).width;\n      ctx.fillText(label, -labelWidth - 3, 12);\n    }\n  }\n\n  drawArrow(ctx, p1, p2, color) {\n    const headLength = 10; // Length of the arrow head\n    const angle = Math.atan2(p2.y, p2.x);\n\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.fillStyle = color;\n\n    // Draw the line\n    ctx.beginPath();\n    ctx.moveTo(p1.x, p1.y);\n    ctx.lineTo(p1.x + p2.x, p1.y + p2.y);\n    ctx.stroke();\n\n    // Draw the arrow head\n    ctx.beginPath();\n    ctx.moveTo(p1.x + p2.x, p1.y + p2.y);\n    ctx.lineTo(p1.x + p2.x - headLength * Math.cos(angle - Math.PI / 6), p1.y + p2.y - headLength * Math.sin(angle - Math.PI / 6));\n    ctx.lineTo(p1.x + p2.x - headLength * Math.cos(angle + Math.PI / 6), p1.y + p2.y - headLength * Math.sin(angle + Math.PI / 6));\n    ctx.lineTo(p1.x + p2.x, p1.y + p2.y);\n    ctx.lineTo(p1.x + p2.x - headLength * Math.cos(angle - Math.PI / 6), p1.y + p2.y - headLength * Math.sin(angle - Math.PI / 6));\n    ctx.stroke();\n    ctx.fill();\n    ctx.restore();\n  }\n  \n  /**\n   * Generates the label to be displayed on the line segment.\n   *\n   * @returns {string} The label text.\n   */\n  generateLabel() {\n    let label = \"\";\n    if (this.drawTextAngle) {\n      const angleDegrees = Math.round(Math.atan2(this.pt2.y - this.pt1.y, this.pt2.x - this.pt1.x) * 180 / Math.PI);\n      label += `${angleDegrees}°`;\n    }\n  \n    if (this.drawTextAngle && this.drawTextMagnitude) {\n      label += \" \";\n    }\n  \n    if (this.drawTextMagnitude) {\n      label += `|${this.getMagnitude().toFixed(1)}|`;\n    }\n  \n    return label;\n  }\n\n  /**\n   * Draws positive and negative angle arcs between two line segments on a canvas context.\n   *\n   * @param {CanvasRenderingContext2D} ctx - The canvas rendering context.\n   * @param {Object} lineSegment1 - The first line segment.\n   * @param {Object} lineSegment2 - The second line segment.\n   * @param {string} clockwiseArcColor - The color of arc1\n   * @param {string} counterclockwiseArcColor - The color of arc2\n   * @param {number} [clockwiseArcRadius=50] - The size of the positive angle arc.\n   * @param {number} [counterclockwiseArcRadius=30] - The size of the negative angle arc.\n   */\n  static drawAngleArcs(ctx, lineSegment1, lineSegment2, clockwiseArcColor='blue', \n    counterclockwiseArcColor='red', clockwiseArcRadius = 50, counterclockwiseArcRadius = 30) {\n    \n    const lineSeg1AngleRadians = lineSegment1.getHeading();\n    const angles = lineSegment1.getAnglesBetween(lineSegment2);\n\n    console.log(`CW angle ${convertToDegrees(angles.clockwiseAngle).toFixed(1)} CCW angle ${convertToDegrees(angles.counterclockwiseAngle).toFixed(1)}`);\n    //console.log(`Counterclockwise Angle: ${angles.counterclockwiseAngle} radians (${convertToDegrees(angles.counterclockwiseAngle).toFixed(1)}°)`);\n    //console.log(`Clockwise Angle: ${angles.clockwiseAngle} radians (${convertToDegrees(angles.clockwiseAngle).toFixed(1)}°)`);\n    // console.log(`Old angle Between: ${angleBetweenLineSegmentsInRadians} radians (${convertToDegrees(angleBetweenLineSegmentsInRadians).toFixed(1)}°)`);\n    \n    ctx.save();\n\n    // Draw the clockwise arc\n    // arc(x, y, radius, startAngle, endAngle, counterclockwise)\n    ctx.beginPath();\n    ctx.arc(lineSegment1.pt1.x, lineSegment1.pt1.y, clockwiseArcRadius, \n      lineSeg1AngleRadians, lineSeg1AngleRadians + angles.clockwiseAngle, false);\n    ctx.strokeStyle = clockwiseArcColor;\n    //ctx.setLineDash([2, 5]);\n    ctx.stroke();\n\n    // Draw the clockwise angle text\n    const clockwiseArcMiddleVector = new Vector(\n      lineSegment1.pt1.x + clockwiseArcRadius * 1.35 * Math.cos(lineSeg1AngleRadians + angles.clockwiseAngle / 2),\n      lineSegment1.pt1.y + clockwiseArcRadius * 1.35 * Math.sin(lineSeg1AngleRadians + angles.clockwiseAngle / 2)\n    );\n  \n    ctx.font = \"12px Arial\"; // Replace with your desired font and size\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = clockwiseArcColor;\n  \n    const clockwiseAngleDegrees = convertToDegrees(angles.clockwiseAngle);\n    const clockwiseAngleDegreesLabel = `${clockwiseAngleDegrees.toFixed(1)}°`;\n    ctx.fillText(clockwiseAngleDegreesLabel, clockwiseArcMiddleVector.x, clockwiseArcMiddleVector.y);\n\n    // Draw the counterclockwise arc\n    ctx.beginPath();\n    ctx.arc(lineSegment1.pt1.x, lineSegment1.pt1.y, counterclockwiseArcRadius,\n      lineSeg1AngleRadians, lineSeg1AngleRadians - angles.counterclockwiseAngle, true);\n    ctx.strokeStyle = counterclockwiseArcColor;\n    ctx.stroke();\n\n    // Draw the counterclockwise angle text\n    const counterclockwiseArcMiddleVector = new Vector(\n      lineSegment1.pt1.x + counterclockwiseArcRadius * 1.5 * Math.cos(lineSeg1AngleRadians - angles.counterclockwiseAngle / 2),\n      lineSegment1.pt1.y + counterclockwiseArcRadius * 1.5 * Math.sin(lineSeg1AngleRadians - angles.counterclockwiseAngle / 2)\n    );\n\n    const counterclockwiseAngleDegrees = convertToDegrees(angles.counterclockwiseAngle);\n    const counterclockwiseAngleDegreesLabel = `${counterclockwiseAngleDegrees.toFixed(1)}°`;\n    ctx.fillStyle = counterclockwiseArcColor;\n    ctx.fillText(counterclockwiseAngleDegreesLabel, counterclockwiseArcMiddleVector.x, counterclockwiseArcMiddleVector.y);\n  \n    ctx.restore();\n  }\n}\n\n/**\n * Calculates the two normals for the line segment (one normal for each direction).\n * \n * @param {Vector} pt1 The first point in the line segment.\n * @param {Vector} pt2 The second point in the line segment.\n * @returns {Vector[]} An array containing two Vector objects representing the normals.\n */\nfunction calculateNormals(pt1, pt2) {\n  // From: https://stackoverflow.com/a/1243676  \n  // https://www.mathworks.com/matlabcentral/answers/85686-how-to-calculate-normal-to-a-line\n  //  V = B - A;\n  //  normal1 = [ V(2), -V(1)];\n  //  normal2 = [-V(2), V(1)];\n\n  const v = pt2.subtract(pt1);\n  return [new Vector(v.y, -v.x), new Vector(-v.y, v.x)];\n}"],"names":[],"mappings":"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"}