{"version":3,"file":"makelab.logo.js","sources":["../src/lib/math/vector.js","../src/lib/math/math-utils.js","../src/lib/graphics/line-segment.js","../src/lib/logo/makelab-logo.js","../src/lib/graphics/color-utils.js","../src/lib/logo/makelab-logo-exploder.js"],"sourcesContent":["/**\n * Class representing a 2D vector.\n */\nexport class Vector {\n  /**\n   * Create a vector.\n   * @param {number} x - The x coordinate.\n   * @param {number} y - The y coordinate.\n   */\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Add another vector to this vector.\n   * @param {Vector} other - The vector to add.\n   * @returns {Vector} The resulting vector.\n   */\n  add(other) {\n    return new Vector(this.x + other.x, this.y + other.y);\n  }\n\n  /**\n   * Subtract another vector from this vector.\n   * @param {Vector} other - The vector to subtract.\n   * @returns {Vector} The resulting vector.\n   */\n  subtract(other) {\n    return new Vector(this.x - other.x, this.y - other.y);\n  }\n\n  /**\n   * Multiply this vector by a scalar.\n   * @param {number} scalar - The scalar to multiply by.\n   * @returns {Vector} The resulting vector.\n   */\n  multiply(scalar) {\n    return new Vector(this.x * scalar, this.y * scalar);\n  }\n\n  /**\n   * Divide this vector by a scalar.\n   * @param {number} scalar - The scalar to divide by.\n   * @returns {Vector} The resulting vector.\n   */\n  divide(scalar) {\n    return new Vector(this.x / scalar, this.y / scalar);\n  }\n\n  /**\n   * Calculate the magnitude (length) of this vector.\n   * @returns {number} The magnitude of the vector.\n   */\n  magnitude() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  /**\n   * Normalize this vector (make it have a magnitude of 1).\n   * @returns {Vector} The normalized vector.\n   */\n  normalize() {\n    const mag = this.magnitude();\n    return new Vector(this.x / mag, this.y / mag);\n  }\n\n  /**\n   * Calculate the dot product of this vector and another vector.\n   * @param {Vector} other - The other vector.\n   * @returns {number} The dot product.\n   */\n  dotProduct(other) {\n    return this.x * other.x + this.y * other.y;\n  }\n\n  /**\n   * Calculate the angle between this vector and another vector.\n   * @param {Vector} other - The other vector.\n   * @returns {number} The angle in radians.\n   */\n  angleBetween(other) {\n    // const cosTheta = this.dotProduct(other) / (this.magnitude() * other.magnitude());\n    // return Math.acos(cosTheta);\n\n    const dotProduct = this.dotProduct(other);\n    const magnitudeProduct = this.magnitude() * other.magnitude();\n\n    // Handle parallel vectors (dotProduct â‰ˆ magnitudeProduct)\n    if (Math.abs(dotProduct - magnitudeProduct) < Number.EPSILON) {\n      return dotProduct >= 0 ? 0 : Math.PI;\n    }\n\n    // Handle zero vectors\n    if (magnitudeProduct === 0) {\n      return 0; // Or return NaN if you prefer\n    }\n\n    const cosTheta = dotProduct / magnitudeProduct;\n    let angle = Math.acos(cosTheta);\n\n    // Use the cross product to determine the sign of the angle\n    const crossProductZ = this.x * other.y - this.y * other.x; // 2D cross product\n    if (crossProductZ < 0) {\n      angle = 2 * Math.PI - angle;\n    }\n\n    return angle;\n  }\n\n  /**\n   * Get a string representation of this vector.\n   * @returns {string} A string representation of the vector.\n   */\n  toString() {\n    return `(${this.x}, ${this.y})`;\n  }\n\n  /**\n   * Create a vector from two points.\n   * @param {Object} p1 - The first point with x and y properties.\n   * @param {Object} p2 - The second point with x and y properties.\n   * @returns {Vector} The resulting vector.\n   */\n  static fromPoints(p1, p2) {\n    return new Vector(p2.x - p1.x, p2.y - p1.y);\n  }\n}","/**\n * Converts degrees to radians.\n *\n * @param {number} degrees - The angle in degrees to be converted to radians.\n * @returns {number} The angle in radians.\n */\nexport function convertToRadians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\n/**\n * Converts an angle from radians to degrees.\n *\n * @param {number} radians - The angle in radians to be converted.\n * @returns {number} The angle in degrees.\n */\nexport function convertToDegrees(radians) {\n  return radians * (180 / Math.PI);\n}\n\n/**\n * Linearly interpolates between two values.\n *\n * @param {number} start - The starting value.\n * @param {number} end - The ending value.\n * @param {number} amt - The interpolation amount (0-1).\n * @returns {number} The interpolated value.\n */\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end;\n}\n\n/**\n * Generates a random number within a specified range (similar to p5js random)\n * If only one argument is provided, it generates a number between 0 and the argument.\n * If two arguments are provided, it generates a number between the two arguments.\n * \n * @param {number} min - The minimum value (inclusive) or the maximum value if only one argument is provided.\n * @param {number} [max] - The maximum value (exclusive).\n * @returns {number} A random number within the specified range.\n */\nexport function random(min, max) {\n  if (max === undefined) {\n    max = min;\n    min = 0;\n  }\n  return Math.random() * (max - min) + min;\n}","// This library provides basic line segment functionality, including drawing\n// and vector operations\n//\n// By Jon E. Froehlich\n// UW CSE Professor\n// http://makeabilitylab.io/\n//\nimport { Vector } from '../math/vector.js';\nimport { convertToRadians, convertToDegrees } from '../math/math-utils.js';\n\nexport class LineSegment {\n  /**\n   * Creates an instance of a line segment.\n   * \n   * @constructor\n   * @param {number|object} x1 - The x-coordinate of the first point or a vector object.\n   * @param {number|object} y1 - The y-coordinate of the first point or a vector object.\n   * @param {number} [x2] - The x-coordinate of the second point (optional if x1 and y1 are vectors).\n   * @param {number} [y2] - The y-coordinate of the second point (optional if x1 and y1 are vectors).\n   */\n  constructor(x1, y1, x2, y2) {\n    //x1 and y1 can either be vectors or the points for p1\n    if (arguments.length == 2 && typeof x1 === 'object' &&\n      typeof y1 === 'object') {\n      this.pt1 = x1;\n      this.pt2 = y1;\n    } else {\n      this.pt1 = new Vector(x1, y1);\n      this.pt2 = new Vector(x2, y2);\n    }\n\n    this.fontSize = 10;\n    this.strokeColor = \"black\";\n    this.isDashedLine = false;\n    this.drawTextLabels = true;\n    this.drawTextMagnitude = true;\n    this.drawTextAngle = true;\n    this.strokeWeight = 2;\n  }\n\n  /**\n   * Returns x1\n   */\n  get x1() {\n    return this.pt1.x;\n  }\n\n  /**\n   * Set x1\n   */\n  set x1(val) {\n    this.pt1.x = val;\n  }\n\n  /**\n   * Returns y1\n   */\n  get y1() {\n    return this.pt1.y;\n  }\n\n  /**\n   * Set y1\n   */\n  set y1(val) {\n    this.pt1.y = val;\n  }\n\n  /**\n   * Returns x2\n   */\n  get x2() {\n    return this.pt2.x;\n  }\n\n  /**\n   * Set x2\n   */\n  set x2(val) {\n    this.pt2.x = val;\n  }\n\n  /**\n   * Returns y2\n   */\n  get y2() {\n    return this.pt2.y;\n  }\n\n  /**\n   * Set y2\n   */\n  set y2(val) {\n    this.pt2.y = val;\n  }\n\n  /**\n   * Returns the heading of the line segment in radians between 0 and 2*PI.\n   */\n  getHeading() {\n    const diffVector = this.pt2.subtract(this.pt1);\n    let heading = Math.atan2(diffVector.y, diffVector.x);\n\n    if (heading < 0) {\n      heading += 2 * Math.PI;\n    }\n    return heading;\n  }\n\n  /**\n   * Returns the two normals for the line segment (one normal for each direction)\n   */\n  getNormals() {\n    return calculateNormals(this.pt1, this.pt2);\n  }\n\n  /**\n   * Returns one of the normals for this line segment. To get both\n   * normals, call getNormals()\n   */\n  getNormal() {\n    return this.getNormals()[0];\n  }\n\n  /**\n   * Calculates the vector representing the line segment moved to the origin.\n   *\n   * @returns {Vector} The vector representing the line segment at the origin.\n   */\n  getVectorAtOrigin() {\n    return this.pt2.subtract(this.pt1);\n  }\n\n  /**\n   * Gets the angles between this line segment and the given vector or line segment.\n   * Returns both the counterclockwise and clockwise angles in radians.\n   *\n   * @param {Vector|LineSegment} vectorOrLineSegment The other vector or line segment.\n   * @returns {Object} An object containing both the counterclockwise and clockwise angles in radians.\n   */\n  getAnglesBetween(vectorOrLineSegment) {\n    const v1 = this.getVectorAtOrigin();\n    let v2;\n\n    if (vectorOrLineSegment instanceof LineSegment) {\n      v2 = vectorOrLineSegment.getVectorAtOrigin();\n    } else {\n      v2 = vectorOrLineSegment;\n    }\n\n    let angleBetweenRadians = v1.angleBetween(v2);\n    console.log(`angleBetweenDegrees: ${convertToDegrees(angleBetweenRadians).toFixed(1)}`);\n\n    // Ensure the angle is between 0 and 2*PI\n    if (angleBetweenRadians < 0) {\n      angleBetweenRadians += 2 * Math.PI;\n    }\n\n    // Calculate the counterclockwise and clockwise angles\n    const clockwiseAngle = angleBetweenRadians;\n    const counterclockwiseAngle = 2 * Math.PI - angleBetweenRadians;\n    \n    return {\n      counterclockwiseAngle,\n      clockwiseAngle\n    };\n  }\n\n  /**\n   * Calculates the orthogonal projection of vector p onto this line segment.\n   * \n   * @param {Vector} p The vector to project onto the line segment.\n   * @returns {Vector} The orthogonal projection of p onto the line segment.\n   */\n  getOrthogonalProjection(p) {\n    // http://mathonline.wikidot.com/orthogonal-projections\n\n    const d1 = this.pt2.subtract(this.pt1); // Direction vector of the line segment\n    const d2 = p.subtract(this.pt1); // Vector from point p to the first point of the line segment\n\n    const l1 = d1.magnitude(); // Length of the line segment\n\n    const dotProduct = Math.min(Math.max(d2.dotProduct(d1.normalize()), 0), l1); // Constrain dot product between 0 and l1\n\n    return this.pt1.add(d1.multiply(dotProduct)); // Project p onto the line segment\n  }\n\n  /**\n   * Returns the minimum distance between this line segment and the given point p.\n   * \n   * @param {Vector} p The point to calculate the distance to.\n   * @returns {number} The minimum distance between the line segment and the point.\n   */\n  getDistance(p) {\n    const op = this.getOrthogonalProjection(p);\n    return p.subtract(op).magnitude();\n  }\n\n  /**\n   * Returns the magnitude of this vector as a floating point number.\n   * \n   * @returns {number} The magnitude of the line segment.\n   */\n  getMagnitude() {\n    return this.pt2.subtract(this.pt1).magnitude();\n  }\n\n  /**\n   * Sets the magnitude of the line segment to the given number.\n   * \n   * @param {number} len The desired magnitude of the line segment.\n   */\n  setMagnitude(len) {\n    const diffVector = this.pt2.subtract(this.pt1).normalize().multiply(len);\n    this.pt2 = this.pt1.add(diffVector);\n  }\n\n  /**\n   * Draws the line segment on the provided canvas context.\n   * \n   * @param {CanvasRenderingContext2D} ctx - The canvas rendering context to draw on.\n   */\n  draw(ctx) {\n    ctx.strokeStyle = this.strokeColor;\n    ctx.lineWidth = this.strokeWeight;\n  \n    if (this.isDashedLine) {\n      ctx.setLineDash([5, 15]);\n    }\n  \n    this.drawArrow(ctx, this.pt1, this.pt2.subtract(this.pt1), this.strokeColor); \n  \n    // Draw text labels (optional)\n    if (this.drawTextLabels) {\n      ctx.font = `${this.fontSize}px Arial`; // Replace with your desired font and size\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"top\";\n      ctx.fillStyle = this.strokeColor; // Or any other desired color\n  \n      const label = this.generateLabel();\n      const labelWidth = ctx.measureText(label).width;\n      ctx.fillText(label, -labelWidth - 3, 12);\n    }\n  }\n\n  drawArrow(ctx, p1, p2, color) {\n    const headLength = 10; // Length of the arrow head\n    const angle = Math.atan2(p2.y, p2.x);\n\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.fillStyle = color;\n\n    // Draw the line\n    ctx.beginPath();\n    ctx.moveTo(p1.x, p1.y);\n    ctx.lineTo(p1.x + p2.x, p1.y + p2.y);\n    ctx.stroke();\n\n    // Draw the arrow head\n    ctx.beginPath();\n    ctx.moveTo(p1.x + p2.x, p1.y + p2.y);\n    ctx.lineTo(p1.x + p2.x - headLength * Math.cos(angle - Math.PI / 6), p1.y + p2.y - headLength * Math.sin(angle - Math.PI / 6));\n    ctx.lineTo(p1.x + p2.x - headLength * Math.cos(angle + Math.PI / 6), p1.y + p2.y - headLength * Math.sin(angle + Math.PI / 6));\n    ctx.lineTo(p1.x + p2.x, p1.y + p2.y);\n    ctx.lineTo(p1.x + p2.x - headLength * Math.cos(angle - Math.PI / 6), p1.y + p2.y - headLength * Math.sin(angle - Math.PI / 6));\n    ctx.stroke();\n    ctx.fill();\n    ctx.restore();\n  }\n  \n  /**\n   * Generates the label to be displayed on the line segment.\n   *\n   * @returns {string} The label text.\n   */\n  generateLabel() {\n    let label = \"\";\n    if (this.drawTextAngle) {\n      const angleDegrees = Math.round(Math.atan2(this.pt2.y - this.pt1.y, this.pt2.x - this.pt1.x) * 180 / Math.PI);\n      label += `${angleDegrees}Â°`;\n    }\n  \n    if (this.drawTextAngle && this.drawTextMagnitude) {\n      label += \" \";\n    }\n  \n    if (this.drawTextMagnitude) {\n      label += `|${this.getMagnitude().toFixed(1)}|`;\n    }\n  \n    return label;\n  }\n\n  /**\n   * Draws positive and negative angle arcs between two line segments on a canvas context.\n   *\n   * @param {CanvasRenderingContext2D} ctx - The canvas rendering context.\n   * @param {Object} lineSegment1 - The first line segment.\n   * @param {Object} lineSegment2 - The second line segment.\n   * @param {string} clockwiseArcColor - The color of arc1\n   * @param {string} counterclockwiseArcColor - The color of arc2\n   * @param {number} [clockwiseArcRadius=50] - The size of the positive angle arc.\n   * @param {number} [counterclockwiseArcRadius=30] - The size of the negative angle arc.\n   */\n  static drawAngleArcs(ctx, lineSegment1, lineSegment2, clockwiseArcColor='blue', \n    counterclockwiseArcColor='red', clockwiseArcRadius = 50, counterclockwiseArcRadius = 30) {\n    \n    const lineSeg1AngleRadians = lineSegment1.getHeading();\n    const angles = lineSegment1.getAnglesBetween(lineSegment2);\n\n    console.log(`CW angle ${convertToDegrees(angles.clockwiseAngle).toFixed(1)} CCW angle ${convertToDegrees(angles.counterclockwiseAngle).toFixed(1)}`);\n    //console.log(`Counterclockwise Angle: ${angles.counterclockwiseAngle} radians (${convertToDegrees(angles.counterclockwiseAngle).toFixed(1)}Â°)`);\n    //console.log(`Clockwise Angle: ${angles.clockwiseAngle} radians (${convertToDegrees(angles.clockwiseAngle).toFixed(1)}Â°)`);\n    // console.log(`Old angle Between: ${angleBetweenLineSegmentsInRadians} radians (${convertToDegrees(angleBetweenLineSegmentsInRadians).toFixed(1)}Â°)`);\n    \n    ctx.save();\n\n    // Draw the clockwise arc\n    // arc(x, y, radius, startAngle, endAngle, counterclockwise)\n    ctx.beginPath();\n    ctx.arc(lineSegment1.pt1.x, lineSegment1.pt1.y, clockwiseArcRadius, \n      lineSeg1AngleRadians, lineSeg1AngleRadians + angles.clockwiseAngle, false);\n    ctx.strokeStyle = clockwiseArcColor;\n    //ctx.setLineDash([2, 5]);\n    ctx.stroke();\n\n    // Draw the clockwise angle text\n    const clockwiseArcMiddleVector = new Vector(\n      lineSegment1.pt1.x + clockwiseArcRadius * 1.35 * Math.cos(lineSeg1AngleRadians + angles.clockwiseAngle / 2),\n      lineSegment1.pt1.y + clockwiseArcRadius * 1.35 * Math.sin(lineSeg1AngleRadians + angles.clockwiseAngle / 2)\n    );\n  \n    ctx.font = \"12px Arial\"; // Replace with your desired font and size\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = clockwiseArcColor;\n  \n    const clockwiseAngleDegrees = convertToDegrees(angles.clockwiseAngle);\n    const clockwiseAngleDegreesLabel = `${clockwiseAngleDegrees.toFixed(1)}Â°`;\n    ctx.fillText(clockwiseAngleDegreesLabel, clockwiseArcMiddleVector.x, clockwiseArcMiddleVector.y);\n\n    // Draw the counterclockwise arc\n    ctx.beginPath();\n    ctx.arc(lineSegment1.pt1.x, lineSegment1.pt1.y, counterclockwiseArcRadius,\n      lineSeg1AngleRadians, lineSeg1AngleRadians - angles.counterclockwiseAngle, true);\n    ctx.strokeStyle = counterclockwiseArcColor;\n    ctx.stroke();\n\n    // Draw the counterclockwise angle text\n    const counterclockwiseArcMiddleVector = new Vector(\n      lineSegment1.pt1.x + counterclockwiseArcRadius * 1.5 * Math.cos(lineSeg1AngleRadians - angles.counterclockwiseAngle / 2),\n      lineSegment1.pt1.y + counterclockwiseArcRadius * 1.5 * Math.sin(lineSeg1AngleRadians - angles.counterclockwiseAngle / 2)\n    );\n\n    const counterclockwiseAngleDegrees = convertToDegrees(angles.counterclockwiseAngle);\n    const counterclockwiseAngleDegreesLabel = `${counterclockwiseAngleDegrees.toFixed(1)}Â°`;\n    ctx.fillStyle = counterclockwiseArcColor;\n    ctx.fillText(counterclockwiseAngleDegreesLabel, counterclockwiseArcMiddleVector.x, counterclockwiseArcMiddleVector.y);\n  \n    ctx.restore();\n  }\n}\n\n/**\n * Calculates the two normals for the line segment (one normal for each direction).\n * \n * @param {Vector} pt1 The first point in the line segment.\n * @param {Vector} pt2 The second point in the line segment.\n * @returns {Vector[]} An array containing two Vector objects representing the normals.\n */\nfunction calculateNormals(pt1, pt2) {\n  // From: https://stackoverflow.com/a/1243676  \n  // https://www.mathworks.com/matlabcentral/answers/85686-how-to-calculate-normal-to-a-line\n  //  V = B - A;\n  //  normal1 = [ V(2), -V(1)];\n  //  normal2 = [-V(2), V(1)];\n\n  const v = pt2.subtract(pt1);\n  return [new Vector(v.y, -v.x), new Vector(-v.y, v.x)];\n}","import { LineSegment } from '../graphics/line-segment.js';\n\nexport class MakeabilityLabLogo {\n\n  constructor(x, y, triangleSize) {\n\n    // The Makeability Lab logo is composed of 6 columns and 4 rows of square cells\n    // Each cell is composed of two triangles, which can be in different orientations\n    this.makeLabLogoArray = MakeabilityLabLogo.createMakeabilityLabLogoCellArray(x, y, triangleSize);\n\n    this.visible = true;\n    this.isMOutlineVisible = true;\n    this.isLOutlineVisible = true;\n    this.mOutlineColor = 'black';\n    this.mOutlineStrokeWidth = 4;\n    this.lOutlineColor = 'black';\n    this.lOutlineStrokeWidth = 4;\n    this.setColors('white', 'black');\n    this.setFillColorsToDefault();\n\n    for(const tri of this.getMShadowTriangles()){\n      tri.fillColor = tri.strokeColor;\n    }\n\n    //this.setColorScheme(ColorScheme.BlackOnWhite);\n    this.areLTriangleStrokesVisible = false;\n  }\n\n  /**\n   * The logo has 6 cols and 4 rows\n   */\n  static get numRows() { return 4; }\n\n  /**\n   * The logo has 6 cols and 4 rows\n   */\n  static get numCols() { return 6; }\n\n  /**\n   * Calculates the width of the MakeabilityLabLogo based on the size of the triangles.\n   *\n   * @param {number} triangleSize - The size of each triangle.\n   * @returns {number} The total width of the MakeabilityLabLogo.\n   */\n  static getWidth(triangleSize){\n    return MakeabilityLabLogo.numCols * triangleSize;\n  }\n\n  /**\n   * Calculates the height of the MakeabilityLabLogo based on the size of the triangles.\n   *\n   * @param {number} triangleSize - The size of each triangle.\n   * @returns {number} The total height of the logo.\n   */\n  static getHeight(triangleSize){\n    return MakeabilityLabLogo.numRows * triangleSize;\n  }\n\n \n\n  /**\n   * Calculates the X center position for the MakeabilityLabLogo on a canvas.\n   *\n   * @param {number} triangleSize - The size of the triangle used in the logo.\n   * @param {number} canvasWidth - The width of the canvas.\n   * @param {boolean} [alignToGrid=false] - Whether to align the center position to the grid.a   * @returns {number} The X center position, optionally aligned to the grid.n(xCent on the given width.\n   *\n   * @param {number} logoWidth - The width of the logo.\n   */\n  static getXCenterPosition(triangleSize, canvasWidth, alignToGrid = false){\n    const xCenter = (canvasWidth - MakeabilityLabLogo.getWidth(triangleSize)) / 2;\n    \n    if(alignToGrid){\n      return Math.round(xCenter / triangleSize) * triangleSize;\n    }else{\n      return xCenter;\n    }\n    \n  }\n\n  /**\n   * Calculates the y-coordinate for centering the MakeabilityLabLogo on the canvas.\n   *\n   * @param {number} triangleSize - The size of each triangle.\n   * @param {number} canvasHeight - The width of the canvas.\n   * @param {boolean} [alignToGrid=false] - Whether to align the center position to the grid.a   * @returns {number} The X center position, optionally aligned to the grid.n(xCent on the given width.\n   *\n   * @returns {number} The y-coordinate for centering the logo.\n   */\n  static getYCenterPosition(triangleSize, canvasHeight, alignToGrid=false){\n    const yCenter = (canvasHeight - MakeabilityLabLogo.getHeight(triangleSize)) / 2;\n    \n    if(alignToGrid){\n      return Math.round(yCenter / triangleSize) * triangleSize;\n    }else{\n      return yCenter;\n    }\n  }\n\n  /**\n   * Gets the far left x-coordinate of the Makeability Lab logo\n   * \n   * @returns {number} The x-coordinate of the first element.\n   */\n  get x(){ return this.makeLabLogoArray[0][0].x }\n\n  \n  /**\n   * Sets the x-coordinate for the logo by adjusting the coordinates \n   * of all triangles accordingly\n   * \n   * @param {number} x - The new x-coordinate to set.\n   */\n  set x(x){\n    const xOffset = x - this.x;\n    for(const tri of this.getAllTriangles()){\n      tri.x += xOffset;\n    }\n  }\n\n  /**\n   * Gets the top y-coordinate of the Makeability Lab logo\n   * \n   * @returns {number} The y-coordinate of the first element.\n   */\n  get y(){ return this.makeLabLogoArray[0][0].y }\n\n  /**\n   * Sets the y-coordinate for the logo and adjusts the y-coordinates of all \n   * triangles accordingly.\n   * \n   * @param {number} y - The new y-coordinate to set.\n   */\n  set y(y){ \n    const yOffset = y - this.y;\n    for(const tri of this.getAllTriangles()){\n      tri.y += yOffset;\n    }\n  }\n\n  /**\n   * Gets the size of a cell in the Makeability Lab logo\n   * Each cell is composed of two triangles\n   * \n   * @returns {number} The size of the cell.\n   */\n  get cellSize(){ return this.makeLabLogoArray[0][0].size }\n\n  /**\n   * Gets the width of the Makeability Lab logo\n   *\n   * @returns {number} The width of the Makeability Lab logo.\n   */\n  get width(){ return MakeabilityLabLogo.numCols * this.makeLabLogoArray[0][0].size }\n\n  /**\n   * Gets the height of the MakeabilityLab logo.\n   * The height is calculated as the number of rows in the logo multiplied by the size of the first element in the logo array.\n   * \n   * @returns {number} The height of the MakeabilityLab logo.\n   */\n  get height(){ return MakeabilityLabLogo.numRows * this.makeLabLogoArray[0][0].size }\n\n  /**\n   * Getter for the default colors state.\n   * \n   * @returns {boolean} - Returns true if the default colors are on, otherwise false.\n   */\n  get areDefaultColorsOn(){ return this._defaultColorsOn; }\n\n  /**\n   * Adjusts the logo size to fit within the given canvas dimensions.\n   * Optionally aligns the logo to a grid.\n   *\n   * @param {number} canvasWidth - The width of the canvas.\n   * @param {number} canvasHeight - The height of the canvas.\n   * @param {boolean} [alignToGrid=false] - If true, aligns the logo to the grid.\n   */ \n  fitToCanvas(canvasWidth, canvasHeight, alignToGrid=false){\n    // Maximize the logo size to fit the canvas\n    // If alignToGrid is true, the logo will be aligned to the grid\n    let adjustedHeight = canvasHeight - 2;\n    if (this.isLOutlineVisible){\n      adjustedHeight -= this.lOutlineStrokeWidth / 2.0;\n    }\n    if(this.isMOutlineVisible){\n      adjustedHeight -= this.mOutlineStrokeWidth / 2.0;\n    }\n    const triangleSize = Math.min(canvasWidth / MakeabilityLabLogo.numCols, adjustedHeight / MakeabilityLabLogo.numRows);\n    this.setTriangleSize(triangleSize);\n    this.centerLogo(canvasWidth, canvasHeight, alignToGrid);\n  }\n\n  /**\n   * Centers the logo on the canvas.\n   *\n   * @param {number} canvasWidth - The width of the canvas.\n   * @param {number} canvasHeight - The height of the canvas.\n   * @param {boolean} [alignToGrid=false] - Whether to align the logo to the grid.\n   */\n  centerLogo(canvasWidth, canvasHeight, alignToGrid=false){\n    const xCenter = MakeabilityLabLogo.getXCenterPosition(this.cellSize, canvasWidth, alignToGrid);\n    const yCenter = MakeabilityLabLogo.getYCenterPosition(this.cellSize, canvasHeight, alignToGrid);\n    this.setLogoPosition(xCenter, yCenter);\n  }\n\n  /**\n   * Sets the size of the logo based on the given width.\n   *\n   * @param {number} logoWidth - The width of the logo.\n   */\n  setLogoSize(logoWidth){\n    const triangleSize = logoWidth / MakeabilityLabLogo.numCols;\n    this.setTriangleSize(triangleSize);\n  }\n\n  /**\n   * Sets the size of all triangles to the specified value.\n   *\n   * @param {number} triangleSize - The new size to set for all triangles.\n   */\n  setTriangleSize(triangleSize){\n    const makeLabLogoNewSize = new MakeabilityLabLogo(this.x, this.y, triangleSize);\n    const newTriangles = makeLabLogoNewSize.getAllTriangles();\n    const allTriangles = this.getAllTriangles();\n    for (let i = 0; i < allTriangles.length; i++) {\n      allTriangles[i].x = newTriangles[i].x;\n      allTriangles[i].y = newTriangles[i].y;\n      allTriangles[i].size = newTriangles[i].size;\n    }\n  }\n\n  /**\n   * Sets the position of the logo by adjusting the coordinates of all triangles.\n   *\n   * @param {number} x - The new x-coordinate for the logo.\n   * @param {number} y - The new y-coordinate for the logo.\n   */\n  setLogoPosition(x, y){\n    const xOffset = x - this.x;\n    const yOffset = y - this.y;\n    for(const tri of this.getAllTriangles()){\n      tri.x += xOffset;\n      tri.y += yOffset;\n    }\n  }\n\n  /**\n   * Sets the visibility of the strokes for the L outline in the Makeability Lab logo\n   * \n   * @param {boolean} visible - A boolean indicating whether the strokes should be visible.\n   */\n  set areLTriangleStrokesVisible(visible){ \n    for(const tri of this.getLTriangles()){\n      tri.isStrokeVisible = visible;\n    }\n  }\n  \n  /**\n   * Returns true of the L strokes are visible, otherwise false.\n   * \n   * @returns {boolean} True if all L-shaped triangle strokes are visible, otherwise false.\n   */\n  get areLTriangleStrokesVisible(){\n    let visible = true;\n    for(const tri of this.getLTriangles()){\n      visible &= tri.isStrokeVisible;\n    }\n    return visible;\n  }\n\n  /**\n   * Sets the stroke color for all L-shaped triangles.\n   *\n   * @param {string} color - The color to set as the stroke color for the triangles.\n   */\n  setLTriangleStrokeColor(color){\n    for(const tri of this.getLTriangles()){\n      tri.strokeColor = color;\n    }\n  }\n\n  /**\n   * Sets the fill color for all MShadow triangles.\n   *\n   * @param {string} color - The color to set for the fill of the MShadow triangles.\n   */\n  setMShadowTriangleFillColor(color){\n    for(const tri of this.getMShadowTriangles()){\n      tri.fillColor = color;\n    }\n  }\n\n  /**\n   * Sets the stroke visibility for all triangles.\n   *\n   * @param {boolean} isTransparent - If true, the stroke will be made transparent (invisible).\n   * @param {boolean} [includeMShadowTriangles=true] - If true, includes M shadow triangles in the operation.\n   */\n  setStrokeTransparent(isTransparent, includeMShadowTriangles=true){\n    for (const tri of this.getAllTriangles(includeMShadowTriangles)) {\n      tri.isStrokeVisible = !isTransparent;\n    }\n  }\n\n  /**\n   * Sets the internal triangles to transparent\n   * @param {Boolean} isTransparent \n   * @param {Boolean} includeMShadowTriangles \n   */\n  setFillTransparent(isTransparent, includeMShadowTriangles=true){\n    for (const tri of this.getAllTriangles(includeMShadowTriangles)) {\n      tri.isFillVisible = !isTransparent;\n    }\n  }\n\n  /**\n   * Sets the fill color for all triangles in the logo.\n   *\n   * @param {string} color - The color to set as the fill color for the triangles.\n   */\n  setFillColor(color, includeMShadowTriangles=true){\n    for (const tri of this.getAllTriangles(includeMShadowTriangles)) {\n      tri.fillColor = color;\n    }\n  }\n\n  /**\n   * Convenience method to set fill and stroke colors\n   * @param {*} fillColor \n   * @param {*} strokeColor \n   */\n  setColors(fillColor, strokeColor, includeMShadowTriangles=true){\n    for (const tri of this.getAllTriangles(includeMShadowTriangles)) {\n      tri.fillColor = fillColor;\n      tri.strokeColor = strokeColor;\n    }\n  }\n\n  /**\n   * Retrieves all triangles from the Makeability Lab logo array.\n   * The M shadow triangles are the two dark triangles on the bottom left and right\n   * side of the logo\n   * \n   * @param {boolean} [includeMShadowTriangles=true] - Whether to include M shadow triangles in the result.\n   * @returns {Array} An array containing all the triangles from the Makeability Lab logo.\n   */\n  getAllTriangles(includeMShadowTriangles=true, includeLTriangles=true){\n    let allTriangles = new Array();\n    for (let row = 0; row < this.makeLabLogoArray.length; row++) {\n      for (let col = 0; col < this.makeLabLogoArray[row].length; col++) {\n        if ((includeMShadowTriangles || !MakeabilityLabLogo.isMShadowTriangle(row, col, 1)) &&\n            (includeLTriangles || !MakeabilityLabLogo.isLTriangle(row, col, 1))) {\n            allTriangles.push(this.makeLabLogoArray[row][col].tri1);\n        }\n\n        if ((includeMShadowTriangles || !MakeabilityLabLogo.isMShadowTriangle(row, col, 2)) &&\n            (includeLTriangles || !MakeabilityLabLogo.isLTriangle(row, col, 2))) {\n            allTriangles.push(this.makeLabLogoArray[row][col].tri2);\n        }\n      }\n    }  \n    return allTriangles;\n  }\n\n  /**\n   * Gets the triangles that are part of the M \"shadow\". That is, the \n   * black/darkened parts of the M logo\n   *\n   * @returns {Array} An array containing the selected triangles.\n   */\n  getMShadowTriangles(){\n    let mShadowTriangles = new Array();\n    \n    // left side\n    mShadowTriangles.push(this.makeLabLogoArray[2][1].tri2);\n    mShadowTriangles.push(this.makeLabLogoArray[3][1].tri1);\n    \n    // right side\n    mShadowTriangles.push(this.makeLabLogoArray[2][4].tri2);\n    mShadowTriangles.push(this.makeLabLogoArray[3][4].tri1);\n\n    return mShadowTriangles;\n  }\n\n  /**\n   * Gets the triangles that compose the L in the Makeability Lab logo\n   *\n   * @returns {Array} An array containing the selected triangles.\n   */\n  getLTriangles(){\n    let lTriangles = new Array();\n    lTriangles.push(this.makeLabLogoArray[0][0].tri2);\n    lTriangles.push(this.makeLabLogoArray[0][1].tri2);\n    lTriangles.push(this.makeLabLogoArray[1][0].tri1);\n    lTriangles.push(this.makeLabLogoArray[1][1].tri1);\n    lTriangles.push(this.makeLabLogoArray[1][1].tri2);\n    lTriangles.push(this.makeLabLogoArray[1][2].tri2);\n    lTriangles.push(this.makeLabLogoArray[2][1].tri1);\n    lTriangles.push(this.makeLabLogoArray[2][2].tri1);\n    lTriangles.push(this.makeLabLogoArray[2][2].tri2);\n    lTriangles.push(this.makeLabLogoArray[3][2].tri1);\n    lTriangles.push(this.makeLabLogoArray[3][3].tri1);\n\n    lTriangles.push(this.makeLabLogoArray[2][3].tri1);\n    lTriangles.push(this.makeLabLogoArray[2][3].tri2);\n\n    lTriangles.push(this.makeLabLogoArray[1][3].tri2);\n    lTriangles.push(this.makeLabLogoArray[2][4].tri1);\n    lTriangles.push(this.makeLabLogoArray[1][4].tri2);\n    return lTriangles;\n  }\n\n  /**\n   * Gets the triangles that are colored in the ML logo by default\n   *\n   * @returns {Array} An array containing the default colored triangles.\n   */\n  getDefaultColoredTriangles(){\n    let cTriangles = new Array();\n    cTriangles.push(this.makeLabLogoArray[0][4].tri2);\n    cTriangles.push(this.makeLabLogoArray[0][5].tri2);\n    cTriangles.push(this.makeLabLogoArray[1][0].tri2);\n    cTriangles.push(this.makeLabLogoArray[1][4].tri1);\n    cTriangles.push(this.makeLabLogoArray[1][5].tri1);\n    cTriangles.push(this.makeLabLogoArray[1][5].tri2);\n    cTriangles.push(this.makeLabLogoArray[2][0].tri1);\n    cTriangles.push(this.makeLabLogoArray[2][0].tri2);\n    cTriangles.push(this.makeLabLogoArray[2][5].tri1);\n    cTriangles.push(this.makeLabLogoArray[2][5].tri2);\n    cTriangles.push(this.makeLabLogoArray[3][0].tri1);\n    cTriangles.push(this.makeLabLogoArray[3][5].tri1);\n    return cTriangles;\n  }\n\n  /**\n   * Sets the default colors for the logo.\n   */\n  setFillColorsToDefault(){\n    this.setDefaultColoredTrianglesFillColor(ORIGINAL_COLOR_ARRAY);\n  }\n\n  /**\n   * Sets the default fill color for the colored triangles.\n   * \n   * @param {(string|string[])} fillColorOrColorArray - A single color string or an \n   * array of color strings to set as the fill color(s) for the triangles.\n   */\n  setDefaultColoredTrianglesFillColor(fillColorOrColorArray){\n    const cTriangles = this.getDefaultColoredTriangles();\n    if(Array.isArray(fillColorOrColorArray)){\n      for(let i=0; i<cTriangles.length; i++){\n        cTriangles[i].fillColor = fillColorOrColorArray[i];\n      }\n    }else{\n      for(let i=0; i<cTriangles.length; i++){\n        cTriangles[i].fillColor = fillColorOrColorArray;\n      }\n    }\n  }\n\n  /**\n   * Sets the stroke width for all triangles.\n   *\n   * @param {number} strokeWidth - The width of the stroke to set.\n   * @param {boolean} [includeMShadowTriangles=true] - Whether to include M shadow triangles.\n   * @param {boolean} [includeLTriangles=true] - Whether to include L triangles.\n   */\n  setStrokeWidth(strokeWidth, includeMShadowTriangles=true, includeLTriangles=true, ){\n    for(const tri of this.getAllTriangles(includeMShadowTriangles, includeLTriangles)){\n      tri.strokeWidth = strokeWidth;\n    }\n  }\n\n  /**\n   * Draws the Makeability Lab logo and its outlines if they are visible.\n   * \n   * This method performs the following actions:\n   * 1. Checks if the logo is visible; if not, it returns immediately.\n   * 2. Iterates through the `makeLabLogoArray` and calls the `draw` method on each element.\n   * 3. If the M outline is visible, it draws the M outline using the specified color and stroke width.\n   * 4. If the L outline is visible, it draws the L outline using the specified color and stroke width.\n   */\n  draw(ctx) {\n    if(!this.visible){ return; }\n\n    for (let row = 0; row < this.makeLabLogoArray.length; row++) {\n      for (let col = 0; col < this.makeLabLogoArray[row].length; col++) {\n          this.makeLabLogoArray[row][col].draw(ctx);\n      }\n    }\n\n    if(this.isMOutlineVisible){\n      ctx.save();\n      ctx.strokeStyle = this.mOutlineColor;\n      ctx.lineWidth = this.mOutlineStrokeWidth;\n      ctx.beginPath();\n      let mPoints = this.getMOutlinePoints();\n      for (const [x, y] of mPoints) {\n        ctx.lineTo(x, y);\n      }\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    if(this.isLOutlineVisible){\n      ctx.save();\n      ctx.strokeStyle = this.lOutlineColor;\n      ctx.lineWidth = this.lOutlineStrokeWidth;\n      ctx.beginPath();\n      let lPoints = this.getLOutlinePoints();\n      for (const [x, y] of lPoints) {\n        ctx.lineTo(x, y);\n      }\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n\n  /**\n   * \n   * @returns gets the L outline as an array of line segments\n   */\n  getLOutlineLineSegments(){\n    let lLineSegments = new Array();\n    \n    lLineSegments.push(new LineSegment(this.x + this.cellSize, this.y, \n      this.x + 3 * this.cellSize, this.y + 2 * this.cellSize));\n    lLineSegments.push(new LineSegment(this.x + 3 * this.cellSize, \n      this.y + 2 * this.cellSize, this.x + 4 * this.cellSize, this.y + this.cellSize));\n    lLineSegments.push(new LineSegment(this.x + 4 * this.cellSize, this.y + this.cellSize,\n      this.x + 5 * this.cellSize, this.y + 2 * this.cellSize));\n    lLineSegments.push(new LineSegment(this.x + 5 * this.cellSize, this.y + 2 * this.cellSize,\n      this.x + 3 * this.cellSize, this.y + 4 * this.cellSize));\n    lLineSegments.push(new LineSegment(this.x + 3 * this.cellSize, this.y + 4 * this.cellSize,\n      this.x, this.y + 1 * this.cellSize));\n    lLineSegments.push(new LineSegment(this.x, this.y + this.cellSize,\n      this.x + this.cellSize, this.y));\n\n    return lLineSegments;\n  }\n\n  /**\n   * \n   * @returns Gets the L outline as an array of points (each point is [x, y])\n   */\n  getLOutlinePoints(){\n    let lPoints = new Array();\n\n    // Top part\n    lPoints.push([this.x, this.y + this.cellSize]);\n    lPoints.push([this.x + this.cellSize, this.y]);\n    lPoints.push([this.x + 2 * this.cellSize, this.y + this.cellSize]);\n    lPoints.push([this.x + 3 * this.cellSize, this.y + 2 * this.cellSize]);\n    lPoints.push([this.x + 4 * this.cellSize, this.y + this.cellSize]);\n\n    // Right side\n    lPoints.push([this.x + 5 * this.cellSize, this.y + 2 * this.cellSize]);\n    lPoints.push([this.x + 4 * this.cellSize, this.y + 3 * this.cellSize]);\n    lPoints.push([this.x + 3 * this.cellSize, this.y + 4 * this.cellSize]);\n\n    // Bottom part\n    lPoints.push([this.x + 2 * this.cellSize, this.y + 3 * this.cellSize]);\n    lPoints.push([this.x + 1 * this.cellSize, this.y + 2 * this.cellSize]);\n    lPoints.push([this.x + 0 * this.cellSize, this.y + 1 * this.cellSize]);\n\n    return lPoints\n  }\n\n  /**\n   * \n   * @returns gets the M outline as an array of line segments\n   */\n   getMOutlineLineSegments(){\n    let mLineSegments = new Array();\n    \n    mLineSegments.push(new LineSegment(this.x + this.cellSize, this.y, \n      this.x + 3 * this.cellSize, this.y + 2 * this.cellSize));\n\n    mLineSegments.push(new LineSegment(this.x + 3 * this.cellSize, this.y + 2 * this.cellSize, \n      this.x + 5 * this.cellSize, this.y));\n\n    mLineSegments.push(new LineSegment(this.x + 5 * this.cellSize, this.y, \n      this.x + 6 * this.cellSize, this.y + this.cellSize));\n\n    mLineSegments.push(new LineSegment(this.x + 6 * this.cellSize, this.y + this.cellSize, \n      this.x + 6 * this.cellSize, this.y + 3 * this.cellSize));\n\n    mLineSegments.push(new LineSegment(this.x + 6 * this.cellSize, this.y + 3 * this.cellSize, \n      this.x + 5 * this.cellSize, this.y + 4 * this.cellSize));\n\n    mLineSegments.push(new LineSegment(this.x + 5 * this.cellSize, this.y + 4 * this.cellSize, \n      this.x + 4 * this.cellSize, this.y + 3 * this.cellSize));\n\n    mLineSegments.push(new LineSegment(this.x + 4 * this.cellSize, this.y + 3 * this.cellSize, \n      this.x + 3 * this.cellSize, this.y + 4 * this.cellSize));\n\n    mLineSegments.push(new LineSegment(this.x + 3 * this.cellSize, this.y + 4 * this.cellSize, \n      this.x + 2 * this.cellSize, this.y + 3 * this.cellSize));\n\n    mLineSegments.push(new LineSegment(this.x + 2 * this.cellSize, this.y + 3 * this.cellSize, \n      this.x + this.cellSize, this.y + 4 * this.cellSize));\n\n    mLineSegments.push(new LineSegment(this.x + this.cellSize, this.y + 4 * this.cellSize, \n      this.x, this.y + 3 * this.cellSize));\n\n    mLineSegments.push(new LineSegment(this.x, this.y + 3 * this.cellSize, \n      this.x, this.y + this.cellSize));\n\n    mLineSegments.push(new LineSegment(this.x, this.y + this.cellSize, \n      this.x + this.cellSize, this.y));\n\n    return mLineSegments;\n  }\n\n  /**\n   * \n   * @returns Gets the M outline as an array of points (each point is [x, y])\n   */\n  getMOutlinePoints(){\n    let mPoints = new Array();\n\n    // Top part\n    mPoints.push([this.x, this.y + this.cellSize]);\n    mPoints.push([this.x + this.cellSize, this.y]);\n    mPoints.push([this.x + 2 * this.cellSize, this.y + this.cellSize]);\n    mPoints.push([this.x + 3 * this.cellSize, this.y + 2 * this.cellSize]);\n    mPoints.push([this.x + 4 * this.cellSize, this.y + this.cellSize]);\n    mPoints.push([this.x + 5 * this.cellSize, this.y]);\n    mPoints.push([this.x + 6 * this.cellSize, this.y + this.cellSize]);\n\n    // Right part\n    mPoints.push([this.x + 6 * this.cellSize, this.y + 2 * this.cellSize]);\n    mPoints.push([this.x + 6 * this.cellSize, this.y + 3 * this.cellSize]);\n    mPoints.push([this.x + 5 * this.cellSize, this.y + 4 * this.cellSize]);\n\n    // Bottom part\n    mPoints.push([this.x + 4 * this.cellSize, this.y + 3 * this.cellSize]);\n    mPoints.push([this.x + 3 * this.cellSize, this.y + 4 * this.cellSize]);\n    mPoints.push([this.x + 2 * this.cellSize, this.y + 3 * this.cellSize]);\n    mPoints.push([this.x + 1 * this.cellSize, this.y + 4 * this.cellSize]);\n    mPoints.push([this.x + 0 * this.cellSize, this.y + 3 * this.cellSize]);\n\n    // Left part\n    mPoints.push([this.x + 0 * this.cellSize, this.y + 2 * this.cellSize]);\n    mPoints.push([this.x + 0 * this.cellSize, this.y + 1 * this.cellSize]);\n   \n    return mPoints;\n  }\n\n  static setRandomColors(triangles, isFillVisible=true, isStrokeVisible=true){\n    for(const tri of triangles){\n      const fillColor = MakeabilityLabLogoColorer.getRandomOriginalColor();\n      tri.fillColor = fillColor;\n      tri.startFillColor = fillColor;\n      tri.endFillColor = fillColor;\n      tri.strokeColor = fillColor;\n      tri.isFillVisible = isFillVisible;\n      tri.isStrokeVisible = isStrokeVisible;\n    }\n  }\n\n  static setColors(triangles, fillColor, strokeColor, isFillVisible=true, isStrokeVisible=true){\n    for(const tri of triangles){\n      tri.fillColor = fillColor;\n      tri.startFillColor = fillColor;\n      tri.endFillColor = fillColor;\n      tri.strokeColor = strokeColor;\n      tri.isFillVisible = isFillVisible;\n      tri.isStrokeVisible = isStrokeVisible;\n    }\n  }\n\n  static createMakeabilityLabLogoCellArray(x, y, triangleSize) {\n    let mlLogo = new Array(MakeabilityLabLogo.numRows);\n\n    // Initialize the make lab logo grid\n    for (let row = 0; row < mlLogo.length; row++) {\n      mlLogo[row] = new Array(MakeabilityLabLogo.numCols);\n    }\n\n    mlLogo[0] = MakeabilityLabLogo.createMakeabilityLabTopRow(x, y, triangleSize);\n\n    y += triangleSize;\n    mlLogo[1] = MakeabilityLabLogo.createMakeabilityLab2ndRow(x, y, triangleSize);\n\n    y += triangleSize;\n    mlLogo[2] = MakeabilityLabLogo.createMakeabilityLab3rdRow(x, y, triangleSize);\n\n    y += triangleSize;\n    mlLogo[3] = MakeabilityLabLogo.createMakeabilityLabBottomRow(x, y, triangleSize);\n\n    return mlLogo;\n  }\n\n  static createMakeabilityLabTopRow(x, y, triangleSize) {\n    let topRow = new Array(MakeabilityLabLogo.numCols);\n    let col = 0;\n    topRow[col++] = Cell.createCellWithBottomTriangleOnly(x, y, triangleSize, TriangleDir.BottomRight);\n\n    x += triangleSize;\n    topRow[col++] = Cell.createCellWithBottomTriangleOnly(x, y, triangleSize, TriangleDir.BottomLeft);\n\n    x += triangleSize;\n    topRow[col++] = Cell.createEmptyCell(x, y, triangleSize, TriangleDir.TopLeft);\n\n    x += triangleSize;\n    topRow[col++] = Cell.createEmptyCell(x, y, triangleSize, TriangleDir.TopRight);\n\n    x += triangleSize;\n    topRow[col++] = Cell.createCellWithBottomTriangleOnly(x, y, triangleSize, TriangleDir.BottomRight);\n\n    x += triangleSize;\n    topRow[col++] = Cell.createCellWithBottomTriangleOnly(x, y, triangleSize, TriangleDir.BottomLeft);\n\n    return topRow;\n  }\n\n  static createMakeabilityLab2ndRow(x, y, triangleSize) {\n    let row2 = new Array(MakeabilityLabLogo.numCols);\n    let col = 0;\n    row2[col++] = Cell.createCell(x, y, triangleSize, TriangleDir.TopRight, TriangleDir.BottomLeft);\n\n    x += triangleSize;\n    row2[col++] = Cell.createCell(x, y, triangleSize, TriangleDir.TopLeft, TriangleDir.BottomRight);\n\n    x += triangleSize;\n    row2[col++] = Cell.createCellWithBottomTriangleOnly(x, y, triangleSize, TriangleDir.BottomLeft);\n\n    x += triangleSize;\n    row2[col++] = Cell.createCellWithBottomTriangleOnly(x, y, triangleSize, TriangleDir.BottomRight);\n\n    x += triangleSize;\n    row2[col++] = Cell.createCell(x, y, triangleSize, TriangleDir.TopRight, TriangleDir.BottomLeft);\n\n    x += triangleSize;\n    row2[col++] = Cell.createCell(x, y, triangleSize, TriangleDir.TopLeft, TriangleDir.BottomRight);\n\n    return row2;\n  }\n\n  static createMakeabilityLab3rdRow(x, y, triangleSize) {\n    let row3 = new Array(MakeabilityLabLogo.numCols);\n    for (let col = 0; col < row3.length; col++) {\n      let triDir = TriangleDir.TopLeft;\n      if (col % 2 != 0) {\n        triDir = TriangleDir.TopRight;\n      }\n      row3[col] = Cell.createCell(x, y, triangleSize, triDir);\n      x += triangleSize;\n    }\n    return row3;\n  }\n\n  static createMakeabilityLabBottomRow(x, y, triangleSize) {\n    let botRow = new Array(MakeabilityLabLogo.numCols);\n    for (let col = 0; col < botRow.length; col++) {\n      let triDir = TriangleDir.TopRight;\n      if (col % 2 != 0) {\n        triDir = TriangleDir.TopLeft;\n      }\n      botRow[col] = Cell.createCellWithTopTriangleOnly(x, y, triangleSize, triDir);\n      x += triangleSize;\n    }\n    return botRow;\n  }\n\n  /**\n   * Determines if the given row, column, and triangle number correspond to an M shadow triangle.\n   * See getMShadowTriangles() for more information.\n   * \n   * @param {number} row - The row number to check.\n   * @param {number} col - The column number to check.\n   * @param {number} triNum - The triangle number to check.\n   * @returns {boolean} - Returns true if the specified row, column, and triangle number \n   * form an M shadow triangle, otherwise false.\n   */\n  static isMShadowTriangle(row, col, triNum){\n    return (row == 2 && col == 1 && triNum == 2) ||\n          (row == 3 && col == 1 && triNum == 1) ||\n          (row == 2 && col == 4 && triNum == 2) ||\n          (row == 3 && col == 4 && triNum == 1);\n  }\n\n  /**\n   * Determines if the specified row, column, and triangle number correspond to a \n   * triangle used in the L in the Makeability Lab logo\n   * See getLTriangles() for more information.\n   *\n   * @param {number} row - The row index.\n   * @param {number} col - The column index.\n   * @param {number} triNum - The triangle number.\n   * @returns {boolean} - Returns true if the specified row, column, and triangle number \n   *   correspond to an L-shaped triangle; otherwise, false.\n   */\n  static isLTriangle(row, col, triNum) {\n    return (row == 0 && col == 0 && triNum == 2) ||\n           (row == 0 && col == 1 && triNum == 2) ||\n           (row == 1 && col == 0 && triNum == 1) ||\n           (row == 1 && col == 1 && triNum == 1) ||\n           (row == 1 && col == 1 && triNum == 2) ||\n           (row == 1 && col == 2 && triNum == 2) ||\n           (row == 2 && col == 1 && triNum == 1) ||\n           (row == 2 && col == 2 && triNum == 1) ||\n           (row == 2 && col == 2 && triNum == 2) ||\n           (row == 3 && col == 2 && triNum == 1) ||\n           (row == 3 && col == 3 && triNum == 1) ||\n           (row == 2 && col == 3 && triNum == 1) ||\n           (row == 2 && col == 3 && triNum == 2) ||\n           (row == 1 && col == 3 && triNum == 2) ||\n           (row == 2 && col == 4 && triNum == 1) ||\n           (row == 1 && col == 4 && triNum == 2);\n  }\n\n}\n\nexport const TriangleDir = {\n  TopLeft: 'TopLeft',\n  TopRight: 'TopRight',\n  BottomLeft: 'BottomLeft',\n  BottomRight: 'BottomRight'\n};\n\nexport class Cell {\n  /**\n   * Creates an instance of the class with two triangles.\n   * @constructor\n   * @param {Object} triangle1 - The first triangle object.\n   * @param {Object} triangle2 - The second triangle object.\n   */\n  constructor(triangle1, triangle2) {\n    this.tri1 = triangle1;\n    this.tri2 = triangle2;\n  }\n\n  /**\n   * Gets the x-coordinate of the cell\n   * @returns {number} The x-coordinate of the cell.\n   */\n  get x() {\n    return this.tri1.x;\n  }\n\n  /**\n   * Sets the x-coordinate for the cell\n   * \n   * @param {number} x - The x-coordinate to set.\n   */\n  set x(x){\n    this.tri1.x = x;\n    this.tri2.x = x;\n  }\n\n  /**\n   * Gets the y-coordinate of the cell\n   * @returns {number} The y-coordinate of the cell.\n   */\n  get y() {\n    return this.tri1.y;\n  }\n\n  /**\n   * Sets the y-coordinate for the cell\n   * \n   * @param {number} y - The y-coordinate to set.\n   */\n  set y(y){\n    this.tri1.y = y;\n    this.tri2.y = y;\n  }\n\n  /**\n   * Gets the size of the cell. Cells are always square.\n   * @type {number}\n   */\n  get size() {\n    return this.tri1.size;\n  }\n\n  /**\n   * Sets the size of the cell.\n   * \n   * @param {number} size - The size to set for the cell.\n   */\n  set size(size){\n    this.tri1.size = size;\n    this.tri2.size = size;\n  }\n\n\n  /**\n   * Sets the fill and stroke colors for the cell.\n   *\n   * @param {string} fillColor - The color to be used for filling.\n   * @param {string} [strokeColor] - The color to be used for the stroke. \n   *    If not provided, the fillColor will be used as the stroke color.\n   */\n  setColors(fillColor, strokeColor){\n    this.setFillColor(fillColor);\n\n    if(strokeColor){\n      this.setStrokeColor(strokeColor);\n    }else{\n      this.setStrokeColor(fillColor);\n    }\n  }\n\n  /**\n   * Sets the fill color for the cell.\n   * \n   * @param {string} fillColor - The fill color\n   */\n  setFillColor(fillColor){\n    this.tri1.fillColor = fillColor;\n    this.tri2.fillColor = fillColor;\n  }\n\n  /**\n   * Sets the stroke width for the logo's triangles.\n   *\n   * @param {number} strokeWidth - The width of the stroke to be applied to the triangles.\n   */\n  setStrokeWidth(strokeWidth){\n    this.tri1.strokeWidth = strokeWidth;\n    this.tri2.strokeWidth = strokeWidth;\n  }\n\n  /**\n   * Sets the stroke color for the cell.\n   * \n   * @param {string} strokeColor - The stroke color\n   */\n  setStrokeColor(strokeColor){\n    this.tri1.strokeColor = strokeColor;\n    this.tri2.strokeColor = strokeColor;\n  }\n\n  /**\n   * Sets the visibility of the cell\n   *\n   * @param {boolean} isVisible - A boolean indicating whether the cell is visible\n   */\n  setVisibility(isVisible){\n    this.tri1.visible = isVisible;\n    this.tri2.visible = isVisible;\n  }\n\n  /**\n   * Draws the cells on the canvas\n   *\n   * @param {CanvasRenderingContext2D} ctx - The canvas rendering context to draw on.\n   */\n  draw(ctx) {\n    if (this.tri1.visible) {\n      this.tri1.draw(ctx);\n    }\n\n    if (this.tri2.visible) {\n      this.tri2.draw(ctx);\n    }\n  }\n\n  /**\n   * Creates an empty cell with two invisible triangles.\n   *\n   * @param {number} x - The x-coordinate of the cell.\n   * @param {number} y - The y-coordinate of the cell.\n   * @param {number} size - The size of the triangles.\n   * @param {TriangleDir} [topTriangleDir=TriangleDir.TopLeft] - The direction of the top triangle.\n   * @returns {Cell} A new cell containing two invisible triangles.\n   */\n  static createEmptyCell(x, y, size, topTriangleDir=TriangleDir.TopLeft) {\n    let tri1 = new Triangle(x, y, size, topTriangleDir);\n    let tri2 = new Triangle(x, y, size, Triangle.getOppositeDirection(topTriangleDir));\n    tri1.visible = false;\n    tri2.visible = false;\n    return new Cell(tri1, tri2);\n  }\n\n  /**\n   * Creates a cell with only the top triangle visible.\n   *\n   * @param {number} x - The x-coordinate of the cell.\n   * @param {number} y - The y-coordinate of the cell.\n   * @param {number} size - The size of the triangles.\n   * @param {string} topTriangleDir - The direction of the top triangle. See TriangleDir for possible values.\n   * @returns {Cell} A cell object with the top triangle visible and the bottom triangle hidden.\n   */\n  static createCellWithTopTriangleOnly(x, y, size, topTriangleDir) {\n    let tri1 = new Triangle(x, y, size, topTriangleDir);\n    let tri2 = new Triangle(x, y, size, Triangle.getOppositeDirection(topTriangleDir));\n    tri2.visible = false;\n    return new Cell(tri1, tri2);\n  }\n\n  /**\n   * Creates a cell with only the bottom triangle visible.\n   *\n   * @param {number} x - The x-coordinate of the cell.\n   * @param {number} y - The y-coordinate of the cell.\n   * @param {number} size - The size of the triangles.\n   * @param {string} botTriangleDir - The direction of the bottom triangle. See TriangleDir for possible values.\n   * @returns {Cell} A new cell with the specified bottom triangle.\n   */\n  static createCellWithBottomTriangleOnly(x, y, size, botTriangleDir) {\n    let tri1 = new Triangle(x, y, size, Triangle.getOppositeDirection(botTriangleDir));\n    let tri2 = new Triangle(x, y, size, botTriangleDir);\n    tri1.visible = false;\n    return new Cell(tri1, tri2);\n  }\n\n  /**\n   * Creates a cell composed of two triangles.\n   *\n   * @param {number} x - The x-coordinate of the cell.\n   * @param {number} y - The y-coordinate of the cell.\n   * @param {number} size - The size of the triangles.\n   * @param {string} triangle1Dir - The direction of the first triangle. See TriangleDir for possible values.\n   * @param {string} [triangle2Dir] - The direction of the second triangle. If not provided, it will be the opposite of the first triangle's direction.\n   * @returns {Cell} A new cell composed of two triangles.\n   */\n  static createCell(x, y, size, triangle1Dir, triangle2Dir) {\n    let tri1 = new Triangle(x, y, size, triangle1Dir);\n\n    if (!triangle2Dir) {\n      triangle2Dir = Triangle.getOppositeDirection(triangle1Dir);\n    }\n    let tri2 = new Triangle(x, y, size, triangle2Dir);\n    return new Cell(tri1, tri2);\n  }\n}\n\nexport class Triangle {\n  /**\n   * Creates an instance of the triangle.\n   * \n   * @constructor\n   * @param {number} x - The x-coordinate of the triangle.\n   * @param {number} y - The y-coordinate of the triangle.\n   * @param {number} size - The size of the triangle.\n   * @param {string} direction - The direction of the triangle. See TriangleDir for possible values.\n   * @param {p5.Color} [fillColor='white'] - The fill color of the triangle.\n   * @param {p5.Color} [strokeColor='black'] - The stroke color of the triangle.\n   * @param {number} [strokeWidth=1] - The stroke width of the triangle.\n   * @param {boolean} [visible=true] - The visibility of the triangle.\n   */\n  constructor(x, y, size, direction, fillColor = 'white',\n    strokeColor = 'black', strokeWidth = 1, visible = true) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.direction = direction;\n    this.angle = 0;\n\n    this.strokeColor = strokeColor;\n    this.fillColor = fillColor;\n    this.strokeWidth = strokeWidth;\n    this.visible = visible;\n\n    this.isFillVisible = true;\n    this.isStrokeVisible = true;\n\n    this.drawCellOutline = false; // for debugging\n  }\n\n  /**\n   * Sets the fill and stroke colors for the triangle.\n   *\n   * @param {string} fillColor - The color to be used for filling.\n   * @param {string} [strokeColor] - The color to be used for the stroke. If not provided, the fillColor will be used as the stroke color.\n   */\n  setColors(fillColor, strokeColor){\n    this.fillColor = fillColor;\n\n    if(strokeColor){\n      this.strokeColor = strokeColor;\n    }else{\n      this.strokeColor = fillColor;\n    }\n  }\n\n  /**\n   * Draws a triangle on the given canvas context based on the object's properties.\n   *\n   * @param {CanvasRenderingContext2D} ctx - The canvas rendering context to draw on.\n   */\n  draw(ctx) {\n    if (!this.visible) return;\n\n    ctx.save();\n\n    if (this.isFillVisible) {\n      ctx.fillStyle = this.fillColor;\n    } \n\n    if (this.isStrokeVisible) {\n      ctx.strokeStyle = this.strokeColor;\n      ctx.lineWidth = this.strokeWidth;\n    } \n\n    ctx.translate(this.x, this.y);\n    ctx.rotate(this.angle * Math.PI / 180);\n\n    ctx.beginPath();\n    switch (this.direction) {\n      case TriangleDir.BottomLeft:\n        ctx.moveTo(0, 0);\n        ctx.lineTo(0, this.size);\n        ctx.lineTo(this.size, this.size);\n        break;\n      case TriangleDir.BottomRight:\n        ctx.moveTo(0, this.size);\n        ctx.lineTo(this.size, this.size);\n        ctx.lineTo(this.size, 0);\n        break;\n      case TriangleDir.TopRight:\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.size, 0);\n        ctx.lineTo(this.size, this.size);\n        break;\n      case TriangleDir.TopLeft:\n      default:\n        ctx.moveTo(0, this.size);\n        ctx.lineTo(0, 0);\n        ctx.lineTo(this.size, 0);\n        break;\n    }\n    ctx.closePath();\n\n    if (this.isFillVisible) {\n      ctx.fill();\n    }\n\n    if (this.isStrokeVisible) {\n      ctx.stroke();\n    }\n\n    // useful for debugging\n    if (this.drawCellOutline) {\n      ctx.strokeStyle = 'rgba(128, 128, 128, 0.5)';\n      ctx.strokeRect(0, 0, this.size, this.size);\n    }\n\n    ctx.restore();\n  }\n\n  /**\n   * Returns the opposite direction of the given triangle direction.\n   *\n   * @param {TriangleDir} triangleDir - The current direction of the triangle.\n   * @returns {TriangleDir} - The opposite direction of the given triangle direction.\n   */\n  static getOppositeDirection(triangleDir) {\n    switch (triangleDir) {\n      case TriangleDir.BottomLeft:\n        return TriangleDir.TopRight;\n      case TriangleDir.BottomRight:\n        return TriangleDir.TopLeft;\n      case TriangleDir.TopRight:\n        return TriangleDir.BottomLeft;\n      case TriangleDir.TopLeft:\n      default:\n        return TriangleDir.BottomRight;\n    }\n  }\n\n  /**\n   * Creates a new Triangle object with the specified properties.\n   *\n   * @param {Object} tri - An object containing the properties of the triangle.\n   * @param {number} tri.x - The x-coordinate of the triangle.\n   * @param {number} tri.y - The y-coordinate of the triangle.\n   * @param {number} tri.size - The size of the triangle.\n   * @param {string} tri.direction - The direction of the triangle.\n   * @param {string} tri.fillColor - The fill color of the triangle.\n   * @param {string} tri.strokeColor - The stroke color of the triangle.\n   * @param {number} tri.strokeWeight - The stroke weight of the triangle.\n   * @param {boolean} tri.visible - The visibility of the triangle.\n   * @returns {Triangle} A new Triangle object.\n   */\n  static createTriangle(tri){\n    return new Triangle(tri.x, tri.y, tri.size, tri.direction,\n      tri.fillColor, tri.strokeColor, tri.strokeWeight, tri.visible);\n  }\n}\n\nexport class Grid{\n  /**\n   * Constructs a new instance of the class.\n   * \n   * @constructor\n   * @param {number} gridWidth - The width of the grid.\n   * @param {number} gridHeight - The height of the grid.\n   * @param {number} triangleSize - The size of each triangle in the grid.\n   * @param {string} [strokeColor='rgba(100, 100, 100, 0.5)'] - The color of the stroke for the grid lines.\n   * @param {string|null} [fillColor=null] - The fill color for the grid triangles.\n   */\n  constructor(gridWidth, gridHeight, triangleSize, strokeColor = 'rgba(200, 200, 200, 0.5)', fillColor = null){\n    this.gridArray = Grid.createGrid(gridWidth, gridHeight, triangleSize, strokeColor, fillColor);\n    this.visible = true;\n    this.setFillColor(fillColor);\n  }\n\n  /**\n   * Draws the grid onto the provided canvas context.\n   *\n   * @param {CanvasRenderingContext2D} ctx - The canvas rendering context to draw on.\n   */\n  draw(ctx){\n    if(!this.visible){ return; }\n\n    for(let row = 0; row < this.gridArray.length; row++){\n      for(let col = 0; col < this.gridArray[row].length; col++){\n        this.gridArray[row][col].draw(ctx);\n      }\n    }\n  }\n\n  /**\n   * Sets the stroke color for all triangles in the grid array.\n   *\n   * @param {string} strokeColor - The color to set as the stroke color for the triangles.\n   */\n  setStrokeColor(strokeColor){\n    for(let row = 0; row < this.gridArray.length; row++){\n      for(let col = 0; col < this.gridArray[row].length; col++){\n        this.gridArray[row][col].tri1.strokeColor = strokeColor;\n        this.gridArray[row][col].tri2.strokeColor = strokeColor;\n      }\n    }\n  }\n  \n  /**\n   * Sets the fill color for all triangles in the grid array.\n   *\n   * @param {string} fillColor - The color to set as the fill color for the triangles.\n   */\n  setFillColor(fillColor){\n    for(let row = 0; row < this.gridArray.length; row++){\n      for(let col = 0; col < this.gridArray[row].length; col++){\n        this.gridArray[row][col].tri1.fillColor = fillColor;\n        this.gridArray[row][col].tri2.fillColor = fillColor;\n      }\n    }\n  }\n\n\n  /**\n   * Creates a grid of cells with triangles.\n   *\n   * @param {number} gridWidth - The width of the grid.\n   * @param {number} gridHeight - The height of the grid.\n   * @param {number} triangleSize - The size of each triangle in the grid.\n   * @param {string} strokeColor - The color of the triangle strokes.\n   * @param {string} [fillColor] - The optional fill color of the triangles.\n   * @returns {Array<Array<Cell>>} A 2D array representing the grid of cells.\n   */\n  static createGrid(gridWidth, gridHeight, triangleSize, strokeColor, fillColor){\n\n    const numGridColumns = Math.floor(gridWidth / triangleSize);\n    const numGridRows = Math.floor(gridHeight / triangleSize);\n  \n    let grid = new Array(numGridRows);\n  \n    for(let row = 0; row < grid.length; row++){\n      grid[row] = new Array(numGridColumns);\n      for(let col = 0; col < grid[row].length; col++){\n        let triDir = TriangleDir.TopLeft;\n        if((row % 2 == 0 && col % 2 == 0) || (row % 2 != 0 && col % 2 != 0)){\n          triDir = TriangleDir.TopRight;\n        }\n        let cell = Cell.createCell(col * triangleSize, row * triangleSize, triangleSize, triDir);\n  \n        cell.tri1.strokeColor = strokeColor;\n        cell.tri2.strokeColor = strokeColor;\n\n        if(fillColor){\n          cell.tri1.fillColor = fillColor;\n          cell.tri2.fillColor = fillColor;\n        }\n\n        grid[row][col] = cell;\n      }\n    }\n    return grid;\n  }\n}\n\nexport const OriginalColorPaletteRGB = {\n  Blue: \"rgb(135, 202, 228)\",\n  BlueGray: \"rgb(147, 169, 207)\",\n  Purple: \"rgb(171, 147, 197)\",\n  Green: \"rgb(148, 206, 146)\",\n  Orange: \"rgb(235, 185, 130)\",\n  RedPurple: \"rgb(207, 145, 166)\",\n  Pink: \"rgb(237, 162, 163)\",\n  YellowGreen: \"rgb(239, 226, 127)\",\n  LightGreen: \"rgb(209, 226, 133)\",\n  BlueGreen: \"rgb(147, 211, 202)\"\n};\n\nexport const ORIGINAL_COLOR_ARRAY = [\n  OriginalColorPaletteRGB.Blue, \n  OriginalColorPaletteRGB.BlueGray,\n  OriginalColorPaletteRGB.YellowGreen,\n  OriginalColorPaletteRGB.Purple,\n  OriginalColorPaletteRGB.Green,\n  OriginalColorPaletteRGB.Orange,\n  OriginalColorPaletteRGB.YellowGreen,\n  OriginalColorPaletteRGB.LightGreen,\n  OriginalColorPaletteRGB.Orange,\n  OriginalColorPaletteRGB.RedPurple,\n  OriginalColorPaletteRGB.BlueGreen,\n  OriginalColorPaletteRGB.Pink\n];\n\n\n/**\n * Class representing a colorer for the Makeability Lab logo.\n */\nexport class MakeabilityLabLogoColorer {\n\n  /**\n   * Gets a random color from the original color palette.\n   * @returns {string} A random color in RGB format from the original color palette.\n   */\n  static getRandomOriginalColor(){\n    return MakeabilityLabLogoColorer.getRandomColorFromPalette(OriginalColorPaletteRGB);\n  }\n\n  /**\n   * Gets a random color from the specified color palette.\n   * If no palette is provided, it defaults to the original color palette.\n   * @param {Object} [palette] - An optional color palette object where keys are color names and values are RGB strings.\n   * @returns {string} A random color in RGB format from the specified or default color palette.\n   */\n  static getRandomColorFromPalette(palette){\n    if(!palette){\n      palette = OriginalColorPaletteRGB;\n    }\n\n    const keys = Object.keys(palette);\n    const randKey = keys[Math.floor(Math.random() * keys.length)];\n    return palette[randKey];\n  }\n}","import { lerp } from '../math/math-utils.js';\n\n/**\n * Linearly interpolates between two colors.\n *\n * @param {Object|string} startColor - The starting color. Can be an object with r, g, b, and \n *  optionally alpha fields, or a string in a valid CSS color format.\n * @param {Object|string} endColor - The ending color. Can be an object with r, g, b, and \n *  optionally alpha fields, or a string in a valid CSS color format.\n * @param {number} amt - The amount to interpolate between the two colors. Should be a value between 0 and 1.\n * @returns {string} The interpolated color in rgba format.\n */\nexport function lerpColor(startColor, endColor, amt) {\n  // console.log(`lerpColor: startColor: ${startColor}, endColor: ${endColor}, amt: ${amt}`);\n\n  // Ensure both colors are objects with r, g, b, and optionally a properties\n  startColor = convertColorStringToObject(startColor);\n  endColor = convertColorStringToObject(endColor);\n\n  const r = Math.round(lerp(startColor.r, endColor.r, amt));\n  const g = Math.round(lerp(startColor.g, endColor.g, amt));\n  const b = Math.round(lerp(startColor.b, endColor.b, amt));\n  const a = lerp(startColor.a || 1, endColor.a || 1, amt); // Default to 1 if a property is missing\n\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n}\n\n/**\n * Converts a color string (hex, rgb, or rgba) to an object with r, g, b, and optionally a properties.\n * If the input is already an object, it returns the input as is.\n *\n * @param {string|Object} colorStr - The color string or object to convert.\n * @returns {Object} An object with properties r, g, b, and optionally a.\n * @throws {Error} If the color string format is invalid.\n */\nexport function convertColorStringToObject(colorStr) {\n  if (typeof colorStr === 'string') {\n    // Handle HTML color names\n    if (HTML_COLOR_NAMES[colorStr.toLowerCase()]) {\n      return HTML_COLOR_NAMES[colorStr.toLowerCase()];\n    }\n\n    // Handle hexstring, rgb, or rgba string\n    const match = colorStr.match(/^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3}|[0-9a-fA-F]{8})$/);\n    if (match) {\n      // Hexstring\n      const hex = match[1];\n      if (hex.length === 8) {\n        // 8-digit hex string with alpha\n        return {\n          r: parseInt(hex.substring(0, 2), 16),\n          g: parseInt(hex.substring(2, 4), 16),\n          b: parseInt(hex.substring(4, 6), 16),\n          a: parseInt(hex.substring(6, 8), 16) / 255\n        };\n      } else {\n        // 6-digit hex string without alpha\n        return {\n          r: parseInt(hex.substring(0, 2), 16),\n          g: parseInt(hex.substring(2, 4), 16),\n          b: parseInt(hex.substring(4, 6), 16),\n          a: 1 // Default to 1 if alpha is not specified\n        };\n      }\n    } else if (colorStr.startsWith('rgb')) {\n      // rgb or rgba string\n      //const match = colorStr.match(/rgba?\\((\\d+), (\\d+), (\\d+)(?:, (\\d*\\.?\\d+))?\\)/);\n      \n      // updated to support optional whitespace between commas\n      const match = colorStr.match(/rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?\\)/);\n      if (match) {\n        const [, r, g, b, a] = match;\n        let parsedColor = {\n          r: parseInt(r),\n          g: parseInt(g),\n          b: parseInt(b),\n          a: a !== undefined ? parseFloat(a) : 1 // Default to 1 if alpha is not specified\n        };\n        //parsedColor.a = 0.0001;\n        //console.log(`parsedColor: ${JSON.stringify(parsedColor)}`);\n        return parsedColor;\n      }\n    }\n    throw new Error(`Invalid color string: ${colorStr}`);\n  }\n\n  // If it's already an object, return it\n  return colorStr;\n}\n\nconst HTML_COLOR_NAMES = {\n  aliceblue: { r: 240, g: 248, b: 255, a: 1 },\n  antiquewhite: { r: 250, g: 235, b: 215, a: 1 },\n  aqua: { r: 0, g: 255, b: 255, a: 1 },\n  aquamarine: { r: 127, g: 255, b: 212, a: 1 },\n  azure: { r: 240, g: 255, b: 255, a: 1 },\n  beige: { r: 245, g: 245, b: 220, a: 1 },\n  bisque: { r: 255, g: 228, b: 196, a: 1 },\n  black: { r: 0, g: 0, b: 0, a: 1 },\n  blanchedalmond: { r: 255, g: 235, b: 205, a: 1 },\n  blue: { r: 0, g: 0, b: 255, a: 1 },\n  blueviolet: { r: 138, g: 43, b: 226, a: 1 },\n  brown: { r: 165, g: 42, b: 42, a: 1 },\n  burlywood: { r: 222, g: 184, b: 135, a: 1 },\n  cadetblue: { r: 95, g: 158, b: 160, a: 1 },\n  chartreuse: { r: 127, g: 255, b: 0, a: 1 },\n  chocolate: { r: 210, g: 105, b: 30, a: 1 },\n  coral: { r: 255, g: 127, b: 80, a: 1 },\n  cornflowerblue: { r: 100, g: 149, b: 237, a: 1 },\n  cornsilk: { r: 255, g: 248, b: 220, a: 1 },\n  crimson: { r: 220, g: 20, b: 60, a: 1 },\n  cyan: { r: 0, g: 255, b: 255, a: 1 },\n  darkblue: { r: 0, g: 0, b: 139, a: 1 },\n  darkcyan: { r: 0, g: 139, b: 139, a: 1 },\n  darkgoldenrod: { r: 184, g: 134, b: 11, a: 1 },\n  darkgray: { r: 169, g: 169, b: 169, a: 1 },\n  darkgreen: { r: 0, g: 100, b: 0, a: 1 },\n  darkkhaki: { r: 189, g: 183, b: 107, a: 1 },\n  darkmagenta: { r: 139, g: 0, b: 139, a: 1 },\n  darkolivegreen: { r: 85, g: 107, b: 47, a: 1 },\n  darkorange: { r: 255, g: 140, b: 0, a: 1 },\n  darkorchid: { r: 153, g: 50, b: 204, a: 1 },\n  darkred: { r: 139, g: 0, b: 0, a: 1 },\n  darksalmon: { r: 233, g: 150, b: 122, a: 1 },\n  darkseagreen: { r: 143, g: 188, b: 143, a: 1 },\n  darkslateblue: { r: 72, g: 61, b: 139, a: 1 },\n  darkslategray: { r: 47, g: 79, b: 79, a: 1 },\n  darkturquoise: { r: 0, g: 206, b: 209, a: 1 },\n  darkviolet: { r: 148, g: 0, b: 211, a: 1 },\n  deeppink: { r: 255, g: 20, b: 147, a: 1 },\n  deepskyblue: { r: 0, g: 191, b: 255, a: 1 },\n  dimgray: { r: 105, g: 105, b: 105, a: 1 },\n  dodgerblue: { r: 30, g: 144, b: 255, a: 1 },\n  firebrick: { r: 178, g: 34, b: 34, a: 1 },\n  floralwhite: { r: 255, g: 250, b: 240, a: 1 },\n  forestgreen: { r: 34, g: 139, b: 34, a: 1 },\n  fuchsia: { r: 255, g: 0, b: 255, a: 1 },\n  gainsboro: { r: 220, g: 220, b: 220, a: 1 },\n  ghostwhite: { r: 248, g: 248, b: 255, a: 1 },\n  gold: { r: 255, g: 215, b: 0, a: 1 },\n  goldenrod: { r: 218, g: 165, b: 32, a: 1 },\n  gray: { r: 128, g: 128, b: 128, a: 1 },\n  green: { r: 0, g: 128, b: 0, a: 1 },\n  greenyellow: { r: 173, g: 255, b: 47, a: 1 },\n  honeydew: { r: 240, g: 255, b: 240, a: 1 },\n  hotpink: { r: 255, g: 105, b: 180, a: 1 },\n  indianred: { r: 205, g: 92, b: 92, a: 1 },\n  indigo: { r: 75, g: 0, b: 130, a: 1 },\n  ivory: { r: 255, g: 255, b: 240, a: 1 },\n  khaki: { r: 240, g: 230, b: 140, a: 1 },\n  lavender: { r: 230, g: 230, b: 250, a: 1 },\n  lavenderblush: { r: 255, g: 240, b: 245, a: 1 },\n  lawngreen: { r: 124, g: 252, b: 0, a: 1 },\n  lemonchiffon: { r: 255, g: 250, b: 205, a: 1 },\n  lightblue: { r: 173, g: 216, b: 230, a: 1 },\n  lightcoral: { r: 240, g: 128, b: 128, a: 1 },\n  lightcyan: { r: 224, g: 255, b: 255, a: 1 },\n  lightgoldenrodyellow: { r: 250, g: 250, b: 210, a: 1 },\n  lightgray: { r: 211, g: 211, b: 211, a: 1 },\n  lightgreen: { r: 144, g: 238, b: 144, a: 1 },\n  lightpink: { r: 255, g: 182, b: 193, a: 1 },\n  lightsalmon: { r: 255, g: 160, b: 122, a: 1 },\n  lightseagreen: { r: 32, g: 178, b: 170, a: 1 },\n  lightskyblue: { r: 135, g: 206, b: 250, a: 1 },\n  lightslategray: { r: 119, g: 136, b: 153, a: 1 },\n  lightsteelblue: { r: 176, g: 196, b: 222, a: 1 },\n  lightyellow: { r: 255, g: 255, b: 224, a: 1 },\n  lime: { r: 0, g: 255, b: 0, a: 1 },\n  limegreen: { r: 50, g: 205, b: 50, a: 1 },\n  linen: { r: 250, g: 240, b: 230, a: 1 },\n  magenta: { r: 255, g: 0, b: 255, a: 1 },\n  maroon: { r: 128, g: 0, b: 0, a: 1 },\n  mediumaquamarine: { r: 102, g: 205, b: 170, a: 1 },\n  mediumblue: { r: 0, g: 0, b: 205, a: 1 },\n  mediumorchid: { r: 186, g: 85, b: 211, a: 1 },\n  mediumpurple: { r: 147, g: 112, b: 219, a: 1 },\n  mediumseagreen: { r: 60, g: 179, b: 113, a: 1 },\n  mediumslateblue: { r: 123, g: 104, b: 238, a: 1 },\n  mediumspringgreen: { r: 0, g: 250, b: 154, a: 1 },\n  mediumturquoise: { r: 72, g: 209, b: 204, a: 1 },\n  mediumvioletred: { r: 199, g: 21, b: 133, a: 1 },\n  midnightblue: { r: 25, g: 25, b: 112, a: 1 },\n  mintcream: { r: 245, g: 255, b: 250, a: 1 },\n  mistyrose: { r: 255, g: 228, b: 225, a: 1 },\n  moccasin: { r: 255, g: 228, b: 181, a: 1 },\n  navajowhite: { r: 255, g: 222, b: 173, a: 1 },\n  navy: { r: 0, g: 0, b: 128, a: 1 },\n  oldlace: { r: 253, g: 245, b: 230, a: 1 },\n  olive: { r: 128, g: 128, b: 0, a: 1 },\n  olivedrab: { r: 107, g: 142, b: 35, a: 1 },\n  orange: { r: 255, g: 165, b: 0, a: 1 },\n  orangered: { r: 255, g: 69, b: 0, a: 1 },\n  orchid: { r: 218, g: 112, b: 214, a: 1 },\n  palegoldenrod: { r: 238, g: 232, b: 170, a: 1 },\n  palegreen: { r: 152, g: 251, b: 152, a: 1 },\n  paleturquoise: { r: 175, g: 238, b: 238, a: 1 },\n  palevioletred: { r: 219, g: 112, b: 147, a: 1 },\n  papayawhip: { r: 255, g: 239, b: 213, a: 1 },\n  peachpuff: { r: 255, g: 218, b: 185, a: 1 },\n  peru: { r: 205, g: 133, b: 63, a: 1 },\n  pink: { r: 255, g: 192, b: 203, a: 1 },\n  plum: { r: 221, g: 160, b: 221, a: 1 },\n  powderblue: { r: 176, g: 224, b: 230, a: 1 },\n  purple: { r: 128, g: 0, b: 128, a: 1 },\n  rebeccapurple: { r: 102, g: 51, b: 153, a: 1 },\n  red: { r: 255, g: 0, b: 0, a: 1 },\n  rosybrown: { r: 188, g: 143, b: 143, a: 1 },\n  royalblue: { r: 65, g: 105, b: 225, a: 1 },\n  saddlebrown: { r: 139, g: 69, b: 19, a: 1 },\n  salmon: { r: 250, g: 128, b: 114, a: 1 },\n  sandybrown: { r: 244, g: 164, b: 96, a: 1 },\n  seagreen: { r: 46, g: 139, b: 87, a: 1 },\n  seashell: { r: 255, g: 245, b: 238, a: 1 },\n  sienna: { r: 160, g: 82, b: 45, a: 1 },\n  silver: { r: 192, g: 192, b: 192, a: 1 },\n  skyblue: { r: 135, g: 206, b: 235, a: 1 },\n  slateblue: { r: 106, g: 90, b: 205, a: 1 },\n  slategray: { r: 112, g: 128, b: 144, a: 1 },\n  snow: { r: 255, g: 250, b: 250, a: 1 },\n  springgreen: { r: 0, g: 255, b: 127, a: 1 },\n  steelblue: { r: 70, g: 130, b: 180, a: 1 },\n  tan: { r: 210, g: 180, b: 140, a: 1 },\n  teal: { r: 0, g: 128, b: 128, a: 1 },\n  thistle: { r: 216, g: 191, b: 216, a: 1 },\n  tomato: { r: 255, g: 99, b: 71, a: 1 },\n  turquoise: { r: 64, g: 224, b: 208, a: 1 },\n  violet: { r: 238, g: 130, b: 238, a: 1 },\n  wheat: { r: 245, g: 222, b: 179, a: 1 },\n  white: { r: 255, g: 255, b: 255, a: 1 },\n  whitesmoke: { r: 245, g: 245, b: 245, a: 1 },\n  yellow: { r: 255, g: 255, b: 0, a: 1 },\n  yellowgreen: { r: 154, g: 205, b: 50, a: 1 }\n};\n  ","import { MakeabilityLabLogo, Grid, ORIGINAL_COLOR_ARRAY } from './makelab-logo.js';\nimport { lerpColor, convertColorStringToObject } from '../graphics/color-utils.js';\nimport { lerp, random } from '../math/math-utils.js';\n\nexport class MakeabilityLabLogoExploder{\n  constructor(x, y, triangleSize, startFillColor=\"rgb(255, 255, 255, 0.5)\", \n    startStrokeColor=\"rgba(0, 0, 0, 0.6)\"){\n\n    this.makeLabLogo = new MakeabilityLabLogo(x, y, triangleSize);\n    this.makeLabLogo.visible = false;\n\n    this.makeLabLogoAnimated = new MakeabilityLabLogo(x, y, triangleSize);\n    this.makeLabLogoAnimated.isLOutlineVisible = false;\n    this.makeLabLogoAnimated.isMOutlineVisible = false;\n    \n    this.makeLabLogo.setLTriangleStrokeColor('rgb(240, 240, 240)'); // barely noticeable\n    this.makeLabLogoAnimated.areLTriangleStrokesVisible = true;\n\n    this.originalRandomTriLocs = [];\n\n    this.explodeSize = true;\n    this.explodeX = true;\n    this.explodeY = true;\n    this.explodeAngle = true;\n    this.explodeStrokeColor = true;\n    this.explodeFillColor = true;\n    this.explodeStrokeWidth = true;\n\n    this.startFillColor = startFillColor;\n    this.startStrokeColor = startStrokeColor;\n\n    // TODO:\n    // - Add Makeability Lab text at end of animation\n  }\n\n  get finalHeight(){ return this.makeLabLogo.height; }\n  get finalWidth(){ return this.makeLabLogo.width; }\n\n  \n  /**\n   * Adjusts the size of the logo to fit within the specified canvas dimensions.\n   *\n   * @param {number} canvasWidth - The width of the canvas to fit the logo into.\n   * @param {number} canvasHeight - The height of the canvas to fit the logo into.\n   * @param {boolean} [alignToGrid=false] - Optional parameter to align the logo to a grid.\n   */\n  fitToCanvas(canvasWidth, canvasHeight, alignToGrid=false){\n    this.makeLabLogo.fitToCanvas(canvasWidth, canvasHeight, alignToGrid);\n    this.makeLabLogoAnimated.fitToCanvas(canvasWidth, canvasHeight, alignToGrid);\n  }\n\n  /**\n   * Sets the size of the logo for both the static and animated versions.\n   *\n   * @param {number} logoWidth - The width to set for the logo.\n   */\n  setLogoSize(logoWidth){\n    this.makeLabLogo.setLogoSize(logoWidth);\n    this.makeLabLogoAnimated.setLogoSize(logoWidth);\n  }\n\n  /**\n   * Sets the x position for both the static and animated MakeLab logos.\n   *\n   * @param {number} x - The x-coordinate to set for the logos.\n   */\n  setXPosition(x){\n    this.makeLabLogo.x = x;\n    this.makeLabLogoAnimated.x = x;\n  }\n\n  /**\n   * Sets the Y position for both static and animated MakeLab logos.\n   *\n   * @param {number} y - The Y coordinate to set.\n   */\n  setYPosition(y){\n    this.makeLabLogo.y = y;\n    this.makeLabLogoAnimated.y = y;\n  }\n\n  /**\n   * Sets the position of the logo.\n   *\n   * @param {number} x - The x-coordinate for the logo position.\n   * @param {number} y - The y-coordinate for the logo position.\n   */\n  setLogoPosition(x, y){\n    this.makeLabLogo.setLogoPosition(x, y);\n    this.makeLabLogoAnimated.setLogoPosition(x, y);\n  }\n\n  /**\n   * Centers the logo on the canvas.\n   *\n   * @param {number} canvasWidth - The width of the canvas.\n   * @param {number} canvasHeight - The height of the canvas.\n   * @param {boolean} [alignToGrid=false] - Whether to align the center position to the grid.a   * @returns {number} The X center position, optionally aligned to the grid.n(xCent on the given width.\n   * \n  */\n  centerLogo(canvasWidth, canvasHeight, alignedToGrid=false){\n    this.makeLabLogo.centerLogo(canvasWidth, canvasHeight, alignedToGrid);\n    this.makeLabLogoAnimated.centerLogo(canvasWidth, canvasHeight, alignedToGrid);\n  }\n\n  /**\n   * Resets the state of the logo exploder with new dimensions and randomizes the \n   * positions, angles, and sizes of the triangles.\n   *\n   * @param {number} canvasWidth - The drawing area width\n   * @param {number} canvasHeight - The drawing area height\n   */\n  reset(canvasWidth, canvasHeight){\n\n    this.originalRandomTriLocs = [];\n    const triangleSize = this.makeLabLogo.cellSize;\n   \n    const makeLabLogoTriangles = this.makeLabLogo.getAllTriangles();\n    const makeLabLogoAnimatedTriangles = this.makeLabLogoAnimated.getAllTriangles();\n    this.makeLabLogoAnimated.setColors(this.startFillColor, this.startStrokeColor);\n    for (let i = 0; i < makeLabLogoAnimatedTriangles.length; i++) {\n      const tri = makeLabLogoAnimatedTriangles[i];\n      let randSize = this.explodeSize ? random(triangleSize/2, triangleSize*3) : triangleSize;\n      tri.x = this.explodeX ? random(randSize, canvasWidth - randSize) : makeLabLogoTriangles[i].x;\n      tri.y = this.explodeY ? random(randSize, canvasHeight - randSize) : makeLabLogoTriangles[i].y;\n      tri.angle = this.explodeAngle ? random(0, 360) : 0;\n      tri.strokeColor = this.explodeStrokeColor ? makeLabLogoAnimatedTriangles[i].strokeColor : makeLabLogoTriangles[i].strokeColor;\n      tri.fillColor = this.explodeFillColor ? makeLabLogoAnimatedTriangles[i].fillColor : makeLabLogoTriangles[i].fillColor;\n      tri.strokeWidth = this.explodeStrokeWidth ? makeLabLogoAnimatedTriangles[i].strokeWidth : makeLabLogoTriangles[i].strokeWidth;\n      tri.size = randSize;\n      this.originalRandomTriLocs.push(\n        { x: tri.x, \n          y: tri.y, \n          angle: tri.angle, \n          size: tri.size,\n          strokeColor: tri.strokeColor,\n          fillColor: tri.fillColor,\n          strokeWidth: tri.strokeWidth\n        });\n    }\n  }\n\n  /**\n   * Updates the state of the animated logo based on the provided interpolation amount.\n   *\n   * @param {number} lerpAmt - The interpolation amount, a value between 0 and 1.\n   *\n   * This function performs the following operations:\n   * 1. Toggles the visibility of the logo outline based on the lerpAmt.\n   * 2. Interpolates the position, angle, and size of each triangle in the logo from their\n   *    original random locations to their final static positions.\n   * 3. Interpolates the color of each triangle in the logo from white to their original colors.\n   */\n  update(lerpAmt){\n    if(lerpAmt >= 1){\n      this.makeLabLogoAnimated.isLOutlineVisible = true;\n      //this.makeLabLogoAnimated.areLTriangleStrokesVisible = false;\n    }else{\n      this.makeLabLogoAnimated.isLOutlineVisible = false;\n      //this.makeLabLogoAnimated.areLTriangleStrokesVisible = true;\n    }\n\n    const staticTriangles = this.makeLabLogo.getAllTriangles(true);\n    let animatedTriangles = this.makeLabLogoAnimated.getAllTriangles(true);\n\n    for (let i = 0; i < this.originalRandomTriLocs.length; i++) {\n      const endX = staticTriangles[i].x;\n      const endY = staticTriangles[i].y;\n      const endAngle = 0;\n      const endSize = staticTriangles[i].size;\n      const endStrokeColor = staticTriangles[i].strokeColor;\n      const endFillColor = staticTriangles[i].fillColor;\n      const endStrokeWidth = staticTriangles[i].strokeWidth;\n  \n      const startX = this.originalRandomTriLocs[i].x;\n      const startY = this.originalRandomTriLocs[i].y;\n      const startAngle = this.originalRandomTriLocs[i].angle;\n      const startSize = this.originalRandomTriLocs[i].size;\n      const startStrokeColor = this.originalRandomTriLocs[i].strokeColor;\n      const startFillColor = this.originalRandomTriLocs[i].fillColor;\n      const startStrokeWidth = this.originalRandomTriLocs[i].strokeWidth;\n  \n      const newX = lerp(startX, endX, lerpAmt);\n      const newY = lerp(startY, endY, lerpAmt);\n      const newAngle = lerp(startAngle, endAngle, lerpAmt);\n      const newSize = lerp(startSize, endSize, lerpAmt);\n      const newStrokeWidth = lerp(startStrokeWidth, endStrokeWidth, lerpAmt);\n      const newStrokeColor = lerpColor(startStrokeColor, endStrokeColor, lerpAmt);\n      const newFillColor = lerpColor(startFillColor, endFillColor, lerpAmt);\n      \n      animatedTriangles[i].x = newX;\n      animatedTriangles[i].y = newY;\n      animatedTriangles[i].angle = newAngle;\n      animatedTriangles[i].size = newSize;\n      animatedTriangles[i].strokeWidth = newStrokeWidth;\n      animatedTriangles[i].strokeColor = newStrokeColor;\n      animatedTriangles[i].fillColor = newFillColor;\n\n      //console.log(`Triangle ${i}`, JSON.stringify(animatedTriangles[i]));\n    }\n  }\n\n  /**\n   * Draws the MakeLab logo and its animated version on the provided canvas context.\n   *\n   * @param {CanvasRenderingContext2D} ctx - The canvas rendering context where the logos will be drawn.\n   */\n  draw(ctx){\n    this.makeLabLogo.draw(ctx);\n    this.makeLabLogoAnimated.draw(ctx);\n  }\n  \n}"],"names":[],"mappings":"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CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACtD;AACA,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACtD;AACA,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC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"}