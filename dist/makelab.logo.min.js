class t{constructor(t,e){this.x=t,this.y=e}add(e){return new t(this.x+e.x,this.y+e.y)}subtract(e){return new t(this.x-e.x,this.y-e.y)}multiply(e){return new t(this.x*e,this.y*e)}divide(e){return new t(this.x/e,this.y/e)}magnitude(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const e=this.magnitude();return new t(this.x/e,this.y/e)}dotProduct(t){return this.x*t.x+this.y*t.y}angleBetween(t){const e=this.dotProduct(t),i=this.magnitude()*t.magnitude();if(Math.abs(e-i)<Number.EPSILON)return e>=0?0:Math.PI;if(0===i)return 0;const s=e/i;let r=Math.acos(s);return this.x*t.y-this.y*t.x<0&&(r=2*Math.PI-r),r}toString(){return`(${this.x}, ${this.y})`}static fromPoints(e,i){return new t(i.x-e.x,i.y-e.y)}}function e(t){return t*(180/Math.PI)}function i(t,e,i){return(1-i)*t+i*e}function s(t,e){return void 0===e&&(e=t,t=0),Math.random()*(e-t)+t}class r{constructor(e,i,s,r){2==arguments.length&&"object"==typeof e&&"object"==typeof i?(this.pt1=e,this.pt2=i):(this.pt1=new t(e,i),this.pt2=new t(s,r)),this.fontSize=10,this.strokeColor="black",this.isDashedLine=!1,this.drawTextLabels=!0,this.drawTextMagnitude=!0,this.drawTextAngle=!0,this.strokeWeight=2}get x1(){return this.pt1.x}set x1(t){this.pt1.x=t}get y1(){return this.pt1.y}set y1(t){this.pt1.y=t}get x2(){return this.pt2.x}set x2(t){this.pt2.x=t}get y2(){return this.pt2.y}set y2(t){this.pt2.y=t}getHeading(){const t=this.pt2.subtract(this.pt1);let e=Math.atan2(t.y,t.x);return e<0&&(e+=2*Math.PI),e}getNormals(){return function(e,i){const s=i.subtract(e);return[new t(s.y,-s.x),new t(-s.y,s.x)]}(this.pt1,this.pt2)}getNormal(){return this.getNormals()[0]}getVectorAtOrigin(){return this.pt2.subtract(this.pt1)}getAnglesBetween(t){const i=this.getVectorAtOrigin();let s;s=t instanceof r?t.getVectorAtOrigin():t;let l=i.angleBetween(s);console.log(`angleBetweenDegrees: ${e(l).toFixed(1)}`),l<0&&(l+=2*Math.PI);const o=l;return{counterclockwiseAngle:2*Math.PI-l,clockwiseAngle:o}}getOrthogonalProjection(t){const e=this.pt2.subtract(this.pt1),i=t.subtract(this.pt1),s=e.magnitude(),r=Math.min(Math.max(i.dotProduct(e.normalize()),0),s);return this.pt1.add(e.multiply(r))}getDistance(t){const e=this.getOrthogonalProjection(t);return t.subtract(e).magnitude()}getMagnitude(){return this.pt2.subtract(this.pt1).magnitude()}setMagnitude(t){const e=this.pt2.subtract(this.pt1).normalize().multiply(t);this.pt2=this.pt1.add(e)}draw(t){if(t.strokeStyle=this.strokeColor,t.lineWidth=this.strokeWeight,this.isDashedLine&&t.setLineDash([5,15]),this.drawArrow(t,this.pt1,this.pt2.subtract(this.pt1),this.strokeColor),this.drawTextLabels){t.font=`${this.fontSize}px Arial`,t.textAlign="left",t.textBaseline="top",t.fillStyle=this.strokeColor;const e=this.generateLabel(),i=t.measureText(e).width;t.fillText(e,-i-3,12)}}drawArrow(t,e,i,s){const r=10,l=Math.atan2(i.y,i.x);t.save(),t.strokeStyle=s,t.fillStyle=s,t.beginPath(),t.moveTo(e.x,e.y),t.lineTo(e.x+i.x,e.y+i.y),t.stroke(),t.beginPath(),t.moveTo(e.x+i.x,e.y+i.y),t.lineTo(e.x+i.x-r*Math.cos(l-Math.PI/6),e.y+i.y-r*Math.sin(l-Math.PI/6)),t.lineTo(e.x+i.x-r*Math.cos(l+Math.PI/6),e.y+i.y-r*Math.sin(l+Math.PI/6)),t.lineTo(e.x+i.x,e.y+i.y),t.lineTo(e.x+i.x-r*Math.cos(l-Math.PI/6),e.y+i.y-r*Math.sin(l-Math.PI/6)),t.stroke(),t.fill(),t.restore()}generateLabel(){let t="";if(this.drawTextAngle){t+=`${Math.round(180*Math.atan2(this.pt2.y-this.pt1.y,this.pt2.x-this.pt1.x)/Math.PI)}°`}return this.drawTextAngle&&this.drawTextMagnitude&&(t+=" "),this.drawTextMagnitude&&(t+=`|${this.getMagnitude().toFixed(1)}|`),t}static drawAngleArcs(i,s,r,l="blue",o="red",a=50,h=30){const n=s.getHeading(),g=s.getAnglesBetween(r);console.log(`CW angle ${e(g.clockwiseAngle).toFixed(1)} CCW angle ${e(g.counterclockwiseAngle).toFixed(1)}`),i.save(),i.beginPath(),i.arc(s.pt1.x,s.pt1.y,a,n,n+g.clockwiseAngle,!1),i.strokeStyle=l,i.stroke();const c=new t(s.pt1.x+1.35*a*Math.cos(n+g.clockwiseAngle/2),s.pt1.y+1.35*a*Math.sin(n+g.clockwiseAngle/2));i.font="12px Arial",i.textAlign="center",i.textBaseline="middle",i.fillStyle=l;const b=`${e(g.clockwiseAngle).toFixed(1)}°`;i.fillText(b,c.x,c.y),i.beginPath(),i.arc(s.pt1.x,s.pt1.y,h,n,n-g.counterclockwiseAngle,!0),i.strokeStyle=o,i.stroke();const u=new t(s.pt1.x+1.5*h*Math.cos(n-g.counterclockwiseAngle/2),s.pt1.y+1.5*h*Math.sin(n-g.counterclockwiseAngle/2)),y=`${e(g.counterclockwiseAngle).toFixed(1)}°`;i.fillStyle=o,i.fillText(y,u.x,u.y),i.restore()}}class l{constructor(t,e,i){this.makeLabLogoArray=l.createMakeabilityLabLogoCellArray(t,e,i),this.visible=!0,this.isMOutlineVisible=!0,this.isLOutlineVisible=!0,this.mOutlineColor="black",this.mOutlineStrokeWidth=4,this.lOutlineColor="black",this.lOutlineStrokeWidth=4,this.setColors("white","black"),this.setFillColorsToDefault();for(const t of this.getMShadowTriangles())t.fillColor=t.strokeColor;this.areLTriangleStrokesVisible=!1}static get numRows(){return 4}static get numCols(){return 6}static getWidth(t){return l.numCols*t}static getHeight(t){return l.numRows*t}static getXCenterPosition(t,e,i=!1){const s=(e-l.getWidth(t))/2;return i?Math.round(s/t)*t:s}static getYCenterPosition(t,e,i=!1){const s=(e-l.getHeight(t))/2;return i?Math.round(s/t)*t:s}get x(){return this.makeLabLogoArray[0][0].x}set x(t){const e=t-this.x;for(const t of this.getAllTriangles())t.x+=e}get y(){return this.makeLabLogoArray[0][0].y}set y(t){const e=t-this.y;for(const t of this.getAllTriangles())t.y+=e}get cellSize(){return this.makeLabLogoArray[0][0].size}get width(){return l.numCols*this.makeLabLogoArray[0][0].size}get height(){return l.numRows*this.makeLabLogoArray[0][0].size}get areDefaultColorsOn(){return this._defaultColorsOn}fitToCanvas(t,e,i=!1){let s=e-2;this.isLOutlineVisible&&(s-=this.lOutlineStrokeWidth/2),this.isMOutlineVisible&&(s-=this.mOutlineStrokeWidth/2);const r=Math.min(t/l.numCols,s/l.numRows);this.setTriangleSize(r),this.centerLogo(t,e,i)}centerLogo(t,e,i=!1){const s=l.getXCenterPosition(this.cellSize,t,i),r=l.getYCenterPosition(this.cellSize,e,i);this.setLogoPosition(s,r)}setLogoSize(t){const e=t/l.numCols;this.setTriangleSize(e)}setTriangleSize(t){const e=new l(this.x,this.y,t).getAllTriangles(),i=this.getAllTriangles();for(let t=0;t<i.length;t++)i[t].x=e[t].x,i[t].y=e[t].y,i[t].size=e[t].size}setLogoPosition(t,e){const i=t-this.x,s=e-this.y;for(const t of this.getAllTriangles())t.x+=i,t.y+=s}set areLTriangleStrokesVisible(t){for(const e of this.getLTriangles())e.isStrokeVisible=t}get areLTriangleStrokesVisible(){let t=!0;for(const e of this.getLTriangles())t&=e.isStrokeVisible;return t}setLTriangleStrokeColor(t){for(const e of this.getLTriangles())e.strokeColor=t}setMShadowTriangleFillColor(t){for(const e of this.getMShadowTriangles())e.fillColor=t}setStrokeTransparent(t,e=!0){for(const i of this.getAllTriangles(e))i.isStrokeVisible=!t}setFillTransparent(t,e=!0){for(const i of this.getAllTriangles(e))i.isFillVisible=!t}setFillColor(t,e=!0){for(const i of this.getAllTriangles(e))i.fillColor=t}setColors(t,e,i=!0){for(const s of this.getAllTriangles(i))s.fillColor=t,s.strokeColor=e}getAllTriangles(t=!0,e=!0){let i=new Array;for(let s=0;s<this.makeLabLogoArray.length;s++)for(let r=0;r<this.makeLabLogoArray[s].length;r++)!t&&l.isMShadowTriangle(s,r,1)||!e&&l.isLTriangle(s,r,1)||i.push(this.makeLabLogoArray[s][r].tri1),!t&&l.isMShadowTriangle(s,r,2)||!e&&l.isLTriangle(s,r,2)||i.push(this.makeLabLogoArray[s][r].tri2);return i}getMShadowTriangles(){let t=new Array;return t.push(this.makeLabLogoArray[2][1].tri2),t.push(this.makeLabLogoArray[3][1].tri1),t.push(this.makeLabLogoArray[2][4].tri2),t.push(this.makeLabLogoArray[3][4].tri1),t}getLTriangles(){let t=new Array;return t.push(this.makeLabLogoArray[0][0].tri2),t.push(this.makeLabLogoArray[0][1].tri2),t.push(this.makeLabLogoArray[1][0].tri1),t.push(this.makeLabLogoArray[1][1].tri1),t.push(this.makeLabLogoArray[1][1].tri2),t.push(this.makeLabLogoArray[1][2].tri2),t.push(this.makeLabLogoArray[2][1].tri1),t.push(this.makeLabLogoArray[2][2].tri1),t.push(this.makeLabLogoArray[2][2].tri2),t.push(this.makeLabLogoArray[3][2].tri1),t.push(this.makeLabLogoArray[3][3].tri1),t.push(this.makeLabLogoArray[2][3].tri1),t.push(this.makeLabLogoArray[2][3].tri2),t.push(this.makeLabLogoArray[1][3].tri2),t.push(this.makeLabLogoArray[2][4].tri1),t.push(this.makeLabLogoArray[1][4].tri2),t}getDefaultColoredTriangles(){let t=new Array;return t.push(this.makeLabLogoArray[0][4].tri2),t.push(this.makeLabLogoArray[0][5].tri2),t.push(this.makeLabLogoArray[1][0].tri2),t.push(this.makeLabLogoArray[1][4].tri1),t.push(this.makeLabLogoArray[1][5].tri1),t.push(this.makeLabLogoArray[1][5].tri2),t.push(this.makeLabLogoArray[2][0].tri1),t.push(this.makeLabLogoArray[2][0].tri2),t.push(this.makeLabLogoArray[2][5].tri1),t.push(this.makeLabLogoArray[2][5].tri2),t.push(this.makeLabLogoArray[3][0].tri1),t.push(this.makeLabLogoArray[3][5].tri1),t}setFillColorsToDefault(){this.setDefaultColoredTrianglesFillColor(c)}setDefaultColoredTrianglesFillColor(t){const e=this.getDefaultColoredTriangles();if(Array.isArray(t))for(let i=0;i<e.length;i++)e[i].fillColor=t[i];else for(let i=0;i<e.length;i++)e[i].fillColor=t}setStrokeWidth(t,e=!0,i=!0){for(const s of this.getAllTriangles(e,i))s.strokeWidth=t}draw(t){if(this.visible){for(let e=0;e<this.makeLabLogoArray.length;e++)for(let i=0;i<this.makeLabLogoArray[e].length;i++)this.makeLabLogoArray[e][i].draw(t);if(this.isMOutlineVisible){t.save(),t.strokeStyle=this.mOutlineColor,t.lineWidth=this.mOutlineStrokeWidth,t.beginPath();let e=this.getMOutlinePoints();for(const[i,s]of e)t.lineTo(i,s);t.closePath(),t.stroke(),t.restore()}if(this.isLOutlineVisible){t.save(),t.strokeStyle=this.lOutlineColor,t.lineWidth=this.lOutlineStrokeWidth,t.beginPath();let e=this.getLOutlinePoints();for(const[i,s]of e)t.lineTo(i,s);t.closePath(),t.stroke(),t.restore()}}}getLOutlineLineSegments(){let t=new Array;return t.push(new r(this.x+this.cellSize,this.y,this.x+3*this.cellSize,this.y+2*this.cellSize)),t.push(new r(this.x+3*this.cellSize,this.y+2*this.cellSize,this.x+4*this.cellSize,this.y+this.cellSize)),t.push(new r(this.x+4*this.cellSize,this.y+this.cellSize,this.x+5*this.cellSize,this.y+2*this.cellSize)),t.push(new r(this.x+5*this.cellSize,this.y+2*this.cellSize,this.x+3*this.cellSize,this.y+4*this.cellSize)),t.push(new r(this.x+3*this.cellSize,this.y+4*this.cellSize,this.x,this.y+1*this.cellSize)),t.push(new r(this.x,this.y+this.cellSize,this.x+this.cellSize,this.y)),t}getLOutlinePoints(){let t=new Array;return t.push([this.x,this.y+this.cellSize]),t.push([this.x+this.cellSize,this.y]),t.push([this.x+2*this.cellSize,this.y+this.cellSize]),t.push([this.x+3*this.cellSize,this.y+2*this.cellSize]),t.push([this.x+4*this.cellSize,this.y+this.cellSize]),t.push([this.x+5*this.cellSize,this.y+2*this.cellSize]),t.push([this.x+4*this.cellSize,this.y+3*this.cellSize]),t.push([this.x+3*this.cellSize,this.y+4*this.cellSize]),t.push([this.x+2*this.cellSize,this.y+3*this.cellSize]),t.push([this.x+1*this.cellSize,this.y+2*this.cellSize]),t.push([this.x+0*this.cellSize,this.y+1*this.cellSize]),t}getMOutlineLineSegments(){let t=new Array;return t.push(new r(this.x+this.cellSize,this.y,this.x+3*this.cellSize,this.y+2*this.cellSize)),t.push(new r(this.x+3*this.cellSize,this.y+2*this.cellSize,this.x+5*this.cellSize,this.y)),t.push(new r(this.x+5*this.cellSize,this.y,this.x+6*this.cellSize,this.y+this.cellSize)),t.push(new r(this.x+6*this.cellSize,this.y+this.cellSize,this.x+6*this.cellSize,this.y+3*this.cellSize)),t.push(new r(this.x+6*this.cellSize,this.y+3*this.cellSize,this.x+5*this.cellSize,this.y+4*this.cellSize)),t.push(new r(this.x+5*this.cellSize,this.y+4*this.cellSize,this.x+4*this.cellSize,this.y+3*this.cellSize)),t.push(new r(this.x+4*this.cellSize,this.y+3*this.cellSize,this.x+3*this.cellSize,this.y+4*this.cellSize)),t.push(new r(this.x+3*this.cellSize,this.y+4*this.cellSize,this.x+2*this.cellSize,this.y+3*this.cellSize)),t.push(new r(this.x+2*this.cellSize,this.y+3*this.cellSize,this.x+this.cellSize,this.y+4*this.cellSize)),t.push(new r(this.x+this.cellSize,this.y+4*this.cellSize,this.x,this.y+3*this.cellSize)),t.push(new r(this.x,this.y+3*this.cellSize,this.x,this.y+this.cellSize)),t.push(new r(this.x,this.y+this.cellSize,this.x+this.cellSize,this.y)),t}getMOutlinePoints(){let t=new Array;return t.push([this.x,this.y+this.cellSize]),t.push([this.x+this.cellSize,this.y]),t.push([this.x+2*this.cellSize,this.y+this.cellSize]),t.push([this.x+3*this.cellSize,this.y+2*this.cellSize]),t.push([this.x+4*this.cellSize,this.y+this.cellSize]),t.push([this.x+5*this.cellSize,this.y]),t.push([this.x+6*this.cellSize,this.y+this.cellSize]),t.push([this.x+6*this.cellSize,this.y+2*this.cellSize]),t.push([this.x+6*this.cellSize,this.y+3*this.cellSize]),t.push([this.x+5*this.cellSize,this.y+4*this.cellSize]),t.push([this.x+4*this.cellSize,this.y+3*this.cellSize]),t.push([this.x+3*this.cellSize,this.y+4*this.cellSize]),t.push([this.x+2*this.cellSize,this.y+3*this.cellSize]),t.push([this.x+1*this.cellSize,this.y+4*this.cellSize]),t.push([this.x+0*this.cellSize,this.y+3*this.cellSize]),t.push([this.x+0*this.cellSize,this.y+2*this.cellSize]),t.push([this.x+0*this.cellSize,this.y+1*this.cellSize]),t}static setRandomColors(t,e=!0,i=!0){for(const s of t){const t=b.getRandomOriginalColor();s.fillColor=t,s.startFillColor=t,s.endFillColor=t,s.strokeColor=t,s.isFillVisible=e,s.isStrokeVisible=i}}static setColors(t,e,i,s=!0,r=!0){for(const l of t)l.fillColor=e,l.startFillColor=e,l.endFillColor=e,l.strokeColor=i,l.isFillVisible=s,l.isStrokeVisible=r}static createMakeabilityLabLogoCellArray(t,e,i){let s=new Array(l.numRows);for(let t=0;t<s.length;t++)s[t]=new Array(l.numCols);return s[0]=l.createMakeabilityLabTopRow(t,e,i),e+=i,s[1]=l.createMakeabilityLab2ndRow(t,e,i),e+=i,s[2]=l.createMakeabilityLab3rdRow(t,e,i),e+=i,s[3]=l.createMakeabilityLabBottomRow(t,e,i),s}static createMakeabilityLabTopRow(t,e,i){let s=new Array(l.numCols),r=0;return s[r++]=a.createCellWithBottomTriangleOnly(t,e,i,o.BottomRight),t+=i,s[r++]=a.createCellWithBottomTriangleOnly(t,e,i,o.BottomLeft),t+=i,s[r++]=a.createEmptyCell(t,e,i,o.TopLeft),t+=i,s[r++]=a.createEmptyCell(t,e,i,o.TopRight),t+=i,s[r++]=a.createCellWithBottomTriangleOnly(t,e,i,o.BottomRight),t+=i,s[r++]=a.createCellWithBottomTriangleOnly(t,e,i,o.BottomLeft),s}static createMakeabilityLab2ndRow(t,e,i){let s=new Array(l.numCols),r=0;return s[r++]=a.createCell(t,e,i,o.TopRight,o.BottomLeft),t+=i,s[r++]=a.createCell(t,e,i,o.TopLeft,o.BottomRight),t+=i,s[r++]=a.createCellWithBottomTriangleOnly(t,e,i,o.BottomLeft),t+=i,s[r++]=a.createCellWithBottomTriangleOnly(t,e,i,o.BottomRight),t+=i,s[r++]=a.createCell(t,e,i,o.TopRight,o.BottomLeft),t+=i,s[r++]=a.createCell(t,e,i,o.TopLeft,o.BottomRight),s}static createMakeabilityLab3rdRow(t,e,i){let s=new Array(l.numCols);for(let r=0;r<s.length;r++){let l=o.TopLeft;r%2!=0&&(l=o.TopRight),s[r]=a.createCell(t,e,i,l),t+=i}return s}static createMakeabilityLabBottomRow(t,e,i){let s=new Array(l.numCols);for(let r=0;r<s.length;r++){let l=o.TopRight;r%2!=0&&(l=o.TopLeft),s[r]=a.createCellWithTopTriangleOnly(t,e,i,l),t+=i}return s}static isMShadowTriangle(t,e,i){return 2==t&&1==e&&2==i||3==t&&1==e&&1==i||2==t&&4==e&&2==i||3==t&&4==e&&1==i}static isLTriangle(t,e,i){return 0==t&&0==e&&2==i||0==t&&1==e&&2==i||1==t&&0==e&&1==i||1==t&&1==e&&1==i||1==t&&1==e&&2==i||1==t&&2==e&&2==i||2==t&&1==e&&1==i||2==t&&2==e&&1==i||2==t&&2==e&&2==i||3==t&&2==e&&1==i||3==t&&3==e&&1==i||2==t&&3==e&&1==i||2==t&&3==e&&2==i||1==t&&3==e&&2==i||2==t&&4==e&&1==i||1==t&&4==e&&2==i}}const o={TopLeft:"TopLeft",TopRight:"TopRight",BottomLeft:"BottomLeft",BottomRight:"BottomRight"};class a{constructor(t,e){this.tri1=t,this.tri2=e}get x(){return this.tri1.x}set x(t){this.tri1.x=t,this.tri2.x=t}get y(){return this.tri1.y}set y(t){this.tri1.y=t,this.tri2.y=t}get size(){return this.tri1.size}set size(t){this.tri1.size=t,this.tri2.size=t}setColors(t,e){this.setFillColor(t),e?this.setStrokeColor(e):this.setStrokeColor(t)}setFillColor(t){this.tri1.fillColor=t,this.tri2.fillColor=t}setStrokeWidth(t){this.tri1.strokeWidth=t,this.tri2.strokeWidth=t}setStrokeColor(t){this.tri1.strokeColor=t,this.tri2.strokeColor=t}setVisibility(t){this.tri1.visible=t,this.tri2.visible=t}draw(t){this.tri1.visible&&this.tri1.draw(t),this.tri2.visible&&this.tri2.draw(t)}static createEmptyCell(t,e,i,s=o.TopLeft){let r=new h(t,e,i,s),l=new h(t,e,i,h.getOppositeDirection(s));return r.visible=!1,l.visible=!1,new a(r,l)}static createCellWithTopTriangleOnly(t,e,i,s){let r=new h(t,e,i,s),l=new h(t,e,i,h.getOppositeDirection(s));return l.visible=!1,new a(r,l)}static createCellWithBottomTriangleOnly(t,e,i,s){let r=new h(t,e,i,h.getOppositeDirection(s)),l=new h(t,e,i,s);return r.visible=!1,new a(r,l)}static createCell(t,e,i,s,r){let l=new h(t,e,i,s);r||(r=h.getOppositeDirection(s));let o=new h(t,e,i,r);return new a(l,o)}}class h{constructor(t,e,i,s,r="white",l="black",o=1,a=!0){this.x=t,this.y=e,this.size=i,this.direction=s,this.angle=0,this.strokeColor=l,this.fillColor=r,this.strokeWidth=o,this.visible=a,this.isFillVisible=!0,this.isStrokeVisible=!0,this.drawCellOutline=!1}setColors(t,e){this.fillColor=t,this.strokeColor=e||t}draw(t){if(this.visible){switch(t.save(),this.isFillVisible&&(t.fillStyle=this.fillColor),this.isStrokeVisible&&(t.strokeStyle=this.strokeColor,t.lineWidth=this.strokeWidth),t.translate(this.x,this.y),t.rotate(this.angle*Math.PI/180),t.beginPath(),this.direction){case o.BottomLeft:t.moveTo(0,0),t.lineTo(0,this.size),t.lineTo(this.size,this.size);break;case o.BottomRight:t.moveTo(0,this.size),t.lineTo(this.size,this.size),t.lineTo(this.size,0);break;case o.TopRight:t.moveTo(0,0),t.lineTo(this.size,0),t.lineTo(this.size,this.size);break;case o.TopLeft:default:t.moveTo(0,this.size),t.lineTo(0,0),t.lineTo(this.size,0)}t.closePath(),this.isFillVisible&&t.fill(),this.isStrokeVisible&&t.stroke(),this.drawCellOutline&&(t.strokeStyle="rgba(128, 128, 128, 0.5)",t.strokeRect(0,0,this.size,this.size)),t.restore()}}static getOppositeDirection(t){switch(t){case o.BottomLeft:return o.TopRight;case o.BottomRight:return o.TopLeft;case o.TopRight:return o.BottomLeft;case o.TopLeft:default:return o.BottomRight}}static createTriangle(t){return new h(t.x,t.y,t.size,t.direction,t.fillColor,t.strokeColor,t.strokeWeight,t.visible)}}class n{constructor(t,e,i,s="rgba(200, 200, 200, 0.5)",r=null){this.gridArray=n.createGrid(t,e,i,s,r),this.visible=!0,this.setFillColor(r)}draw(t){if(this.visible)for(let e=0;e<this.gridArray.length;e++)for(let i=0;i<this.gridArray[e].length;i++)this.gridArray[e][i].draw(t)}setStrokeColor(t){for(let e=0;e<this.gridArray.length;e++)for(let i=0;i<this.gridArray[e].length;i++)this.gridArray[e][i].tri1.strokeColor=t,this.gridArray[e][i].tri2.strokeColor=t}setFillColor(t){for(let e=0;e<this.gridArray.length;e++)for(let i=0;i<this.gridArray[e].length;i++)this.gridArray[e][i].tri1.fillColor=t,this.gridArray[e][i].tri2.fillColor=t}static createGrid(t,e,i,s,r){const l=Math.floor(t/i),h=Math.floor(e/i);let n=new Array(h);for(let t=0;t<n.length;t++){n[t]=new Array(l);for(let e=0;e<n[t].length;e++){let l=o.TopLeft;(t%2==0&&e%2==0||t%2!=0&&e%2!=0)&&(l=o.TopRight);let h=a.createCell(e*i,t*i,i,l);h.tri1.strokeColor=s,h.tri2.strokeColor=s,r&&(h.tri1.fillColor=r,h.tri2.fillColor=r),n[t][e]=h}}return n}}const g={Blue:"rgb(135, 202, 228)",BlueGray:"rgb(147, 169, 207)",Purple:"rgb(171, 147, 197)",Green:"rgb(148, 206, 146)",Orange:"rgb(235, 185, 130)",RedPurple:"rgb(207, 145, 166)",Pink:"rgb(237, 162, 163)",YellowGreen:"rgb(239, 226, 127)",LightGreen:"rgb(209, 226, 133)",BlueGreen:"rgb(147, 211, 202)"},c=[g.Blue,g.BlueGray,g.YellowGreen,g.Purple,g.Green,g.Orange,g.YellowGreen,g.LightGreen,g.Orange,g.RedPurple,g.BlueGreen,g.Pink];class b{static getRandomOriginalColor(){return b.getRandomColorFromPalette(g)}static getRandomColorFromPalette(t){t||(t=g);const e=Object.keys(t);return t[e[Math.floor(Math.random()*e.length)]]}}function u(t,e,s){t=y(t),e=y(e);return`rgba(${Math.round(i(t.r,e.r,s))}, ${Math.round(i(t.g,e.g,s))}, ${Math.round(i(t.b,e.b,s))}, ${i(t.a||1,e.a||1,s)})`}function y(t){if("string"==typeof t){if(d[t.toLowerCase()])return d[t.toLowerCase()];const e=t.match(/^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3}|[0-9a-fA-F]{8})$/);if(e){const t=e[1];return 8===t.length?{r:parseInt(t.substring(0,2),16),g:parseInt(t.substring(2,4),16),b:parseInt(t.substring(4,6),16),a:parseInt(t.substring(6,8),16)/255}:{r:parseInt(t.substring(0,2),16),g:parseInt(t.substring(2,4),16),b:parseInt(t.substring(4,6),16),a:1}}if(t.startsWith("rgb")){const e=t.match(/rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?\)/);if(e){const[,t,i,s,r]=e;return{r:parseInt(t),g:parseInt(i),b:parseInt(s),a:void 0!==r?parseFloat(r):1}}}throw new Error(`Invalid color string: ${t}`)}return t}const d={aliceblue:{r:240,g:248,b:255,a:1},antiquewhite:{r:250,g:235,b:215,a:1},aqua:{r:0,g:255,b:255,a:1},aquamarine:{r:127,g:255,b:212,a:1},azure:{r:240,g:255,b:255,a:1},beige:{r:245,g:245,b:220,a:1},bisque:{r:255,g:228,b:196,a:1},black:{r:0,g:0,b:0,a:1},blanchedalmond:{r:255,g:235,b:205,a:1},blue:{r:0,g:0,b:255,a:1},blueviolet:{r:138,g:43,b:226,a:1},brown:{r:165,g:42,b:42,a:1},burlywood:{r:222,g:184,b:135,a:1},cadetblue:{r:95,g:158,b:160,a:1},chartreuse:{r:127,g:255,b:0,a:1},chocolate:{r:210,g:105,b:30,a:1},coral:{r:255,g:127,b:80,a:1},cornflowerblue:{r:100,g:149,b:237,a:1},cornsilk:{r:255,g:248,b:220,a:1},crimson:{r:220,g:20,b:60,a:1},cyan:{r:0,g:255,b:255,a:1},darkblue:{r:0,g:0,b:139,a:1},darkcyan:{r:0,g:139,b:139,a:1},darkgoldenrod:{r:184,g:134,b:11,a:1},darkgray:{r:169,g:169,b:169,a:1},darkgreen:{r:0,g:100,b:0,a:1},darkkhaki:{r:189,g:183,b:107,a:1},darkmagenta:{r:139,g:0,b:139,a:1},darkolivegreen:{r:85,g:107,b:47,a:1},darkorange:{r:255,g:140,b:0,a:1},darkorchid:{r:153,g:50,b:204,a:1},darkred:{r:139,g:0,b:0,a:1},darksalmon:{r:233,g:150,b:122,a:1},darkseagreen:{r:143,g:188,b:143,a:1},darkslateblue:{r:72,g:61,b:139,a:1},darkslategray:{r:47,g:79,b:79,a:1},darkturquoise:{r:0,g:206,b:209,a:1},darkviolet:{r:148,g:0,b:211,a:1},deeppink:{r:255,g:20,b:147,a:1},deepskyblue:{r:0,g:191,b:255,a:1},dimgray:{r:105,g:105,b:105,a:1},dodgerblue:{r:30,g:144,b:255,a:1},firebrick:{r:178,g:34,b:34,a:1},floralwhite:{r:255,g:250,b:240,a:1},forestgreen:{r:34,g:139,b:34,a:1},fuchsia:{r:255,g:0,b:255,a:1},gainsboro:{r:220,g:220,b:220,a:1},ghostwhite:{r:248,g:248,b:255,a:1},gold:{r:255,g:215,b:0,a:1},goldenrod:{r:218,g:165,b:32,a:1},gray:{r:128,g:128,b:128,a:1},green:{r:0,g:128,b:0,a:1},greenyellow:{r:173,g:255,b:47,a:1},honeydew:{r:240,g:255,b:240,a:1},hotpink:{r:255,g:105,b:180,a:1},indianred:{r:205,g:92,b:92,a:1},indigo:{r:75,g:0,b:130,a:1},ivory:{r:255,g:255,b:240,a:1},khaki:{r:240,g:230,b:140,a:1},lavender:{r:230,g:230,b:250,a:1},lavenderblush:{r:255,g:240,b:245,a:1},lawngreen:{r:124,g:252,b:0,a:1},lemonchiffon:{r:255,g:250,b:205,a:1},lightblue:{r:173,g:216,b:230,a:1},lightcoral:{r:240,g:128,b:128,a:1},lightcyan:{r:224,g:255,b:255,a:1},lightgoldenrodyellow:{r:250,g:250,b:210,a:1},lightgray:{r:211,g:211,b:211,a:1},lightgreen:{r:144,g:238,b:144,a:1},lightpink:{r:255,g:182,b:193,a:1},lightsalmon:{r:255,g:160,b:122,a:1},lightseagreen:{r:32,g:178,b:170,a:1},lightskyblue:{r:135,g:206,b:250,a:1},lightslategray:{r:119,g:136,b:153,a:1},lightsteelblue:{r:176,g:196,b:222,a:1},lightyellow:{r:255,g:255,b:224,a:1},lime:{r:0,g:255,b:0,a:1},limegreen:{r:50,g:205,b:50,a:1},linen:{r:250,g:240,b:230,a:1},magenta:{r:255,g:0,b:255,a:1},maroon:{r:128,g:0,b:0,a:1},mediumaquamarine:{r:102,g:205,b:170,a:1},mediumblue:{r:0,g:0,b:205,a:1},mediumorchid:{r:186,g:85,b:211,a:1},mediumpurple:{r:147,g:112,b:219,a:1},mediumseagreen:{r:60,g:179,b:113,a:1},mediumslateblue:{r:123,g:104,b:238,a:1},mediumspringgreen:{r:0,g:250,b:154,a:1},mediumturquoise:{r:72,g:209,b:204,a:1},mediumvioletred:{r:199,g:21,b:133,a:1},midnightblue:{r:25,g:25,b:112,a:1},mintcream:{r:245,g:255,b:250,a:1},mistyrose:{r:255,g:228,b:225,a:1},moccasin:{r:255,g:228,b:181,a:1},navajowhite:{r:255,g:222,b:173,a:1},navy:{r:0,g:0,b:128,a:1},oldlace:{r:253,g:245,b:230,a:1},olive:{r:128,g:128,b:0,a:1},olivedrab:{r:107,g:142,b:35,a:1},orange:{r:255,g:165,b:0,a:1},orangered:{r:255,g:69,b:0,a:1},orchid:{r:218,g:112,b:214,a:1},palegoldenrod:{r:238,g:232,b:170,a:1},palegreen:{r:152,g:251,b:152,a:1},paleturquoise:{r:175,g:238,b:238,a:1},palevioletred:{r:219,g:112,b:147,a:1},papayawhip:{r:255,g:239,b:213,a:1},peachpuff:{r:255,g:218,b:185,a:1},peru:{r:205,g:133,b:63,a:1},pink:{r:255,g:192,b:203,a:1},plum:{r:221,g:160,b:221,a:1},powderblue:{r:176,g:224,b:230,a:1},purple:{r:128,g:0,b:128,a:1},rebeccapurple:{r:102,g:51,b:153,a:1},red:{r:255,g:0,b:0,a:1},rosybrown:{r:188,g:143,b:143,a:1},royalblue:{r:65,g:105,b:225,a:1},saddlebrown:{r:139,g:69,b:19,a:1},salmon:{r:250,g:128,b:114,a:1},sandybrown:{r:244,g:164,b:96,a:1},seagreen:{r:46,g:139,b:87,a:1},seashell:{r:255,g:245,b:238,a:1},sienna:{r:160,g:82,b:45,a:1},silver:{r:192,g:192,b:192,a:1},skyblue:{r:135,g:206,b:235,a:1},slateblue:{r:106,g:90,b:205,a:1},slategray:{r:112,g:128,b:144,a:1},snow:{r:255,g:250,b:250,a:1},springgreen:{r:0,g:255,b:127,a:1},steelblue:{r:70,g:130,b:180,a:1},tan:{r:210,g:180,b:140,a:1},teal:{r:0,g:128,b:128,a:1},thistle:{r:216,g:191,b:216,a:1},tomato:{r:255,g:99,b:71,a:1},turquoise:{r:64,g:224,b:208,a:1},violet:{r:238,g:130,b:238,a:1},wheat:{r:245,g:222,b:179,a:1},white:{r:255,g:255,b:255,a:1},whitesmoke:{r:245,g:245,b:245,a:1},yellow:{r:255,g:255,b:0,a:1},yellowgreen:{r:154,g:205,b:50,a:1}};class L{constructor(t,e,i,s="rgb(255, 255, 255, 0.5)",r="rgba(0, 0, 0, 0.6)"){this.makeLabLogo=new l(t,e,i),this.makeLabLogo.visible=!1,this.makeLabLogoAnimated=new l(t,e,i),this.makeLabLogoAnimated.isLOutlineVisible=!1,this.makeLabLogoAnimated.isMOutlineVisible=!1,this.makeLabLogo.setLTriangleStrokeColor("rgb(240, 240, 240)"),this.makeLabLogoAnimated.areLTriangleStrokesVisible=!0,this.originalRandomTriLocs=[],this.explodeSize=!0,this.explodeX=!0,this.explodeY=!0,this.explodeAngle=!0,this.explodeStrokeColor=!0,this.explodeFillColor=!0,this.explodeStrokeWidth=!0,this.startFillColor=s,this.startStrokeColor=r}get finalHeight(){return this.makeLabLogo.height}get finalWidth(){return this.makeLabLogo.width}fitToCanvas(t,e,i=!1){this.makeLabLogo.fitToCanvas(t,e,i),this.makeLabLogoAnimated.fitToCanvas(t,e,i)}setLogoSize(t){this.makeLabLogo.setLogoSize(t),this.makeLabLogoAnimated.setLogoSize(t)}setXPosition(t){this.makeLabLogo.x=t,this.makeLabLogoAnimated.x=t}setYPosition(t){this.makeLabLogo.y=t,this.makeLabLogoAnimated.y=t}setLogoPosition(t,e){this.makeLabLogo.setLogoPosition(t,e),this.makeLabLogoAnimated.setLogoPosition(t,e)}centerLogo(t,e,i=!1){this.makeLabLogo.centerLogo(t,e,i),this.makeLabLogoAnimated.centerLogo(t,e,i)}reset(t,e){this.originalRandomTriLocs=[];const i=this.makeLabLogo.cellSize,r=this.makeLabLogo.getAllTriangles(),l=this.makeLabLogoAnimated.getAllTriangles();this.makeLabLogoAnimated.setColors(this.startFillColor,this.startStrokeColor);for(let o=0;o<l.length;o++){const a=l[o];let h=this.explodeSize?s(i/2,3*i):i;a.x=this.explodeX?s(h,t-h):r[o].x,a.y=this.explodeY?s(h,e-h):r[o].y,a.angle=this.explodeAngle?s(0,360):0,a.strokeColor=this.explodeStrokeColor?l[o].strokeColor:r[o].strokeColor,a.fillColor=this.explodeFillColor?l[o].fillColor:r[o].fillColor,a.strokeWidth=this.explodeStrokeWidth?l[o].strokeWidth:r[o].strokeWidth,a.size=h,this.originalRandomTriLocs.push({x:a.x,y:a.y,angle:a.angle,size:a.size,strokeColor:a.strokeColor,fillColor:a.fillColor,strokeWidth:a.strokeWidth})}}update(t){this.makeLabLogoAnimated.isLOutlineVisible=t>=1;const e=this.makeLabLogo.getAllTriangles(!0);let s=this.makeLabLogoAnimated.getAllTriangles(!0);for(let r=0;r<this.originalRandomTriLocs.length;r++){const l=e[r].x,o=e[r].y,a=0,h=e[r].size,n=e[r].strokeColor,g=e[r].fillColor,c=e[r].strokeWidth,b=this.originalRandomTriLocs[r].x,y=this.originalRandomTriLocs[r].y,d=this.originalRandomTriLocs[r].angle,L=this.originalRandomTriLocs[r].size,m=this.originalRandomTriLocs[r].strokeColor,k=this.originalRandomTriLocs[r].fillColor,p=this.originalRandomTriLocs[r].strokeWidth,S=i(b,l,t),x=i(y,o,t),f=i(d,a,t),w=i(L,h,t),z=i(p,c,t),C=u(m,n,t),A=u(k,g,t);s[r].x=S,s[r].y=x,s[r].angle=f,s[r].size=w,s[r].strokeWidth=z,s[r].strokeColor=C,s[r].fillColor=A}}draw(t){this.makeLabLogo.draw(t),this.makeLabLogoAnimated.draw(t)}}export{a as Cell,n as Grid,l as MakeabilityLabLogo,b as MakeabilityLabLogoColorer,L as MakeabilityLabLogoExploder,c as ORIGINAL_COLOR_ARRAY,g as OriginalColorPaletteRGB,h as Triangle,o as TriangleDir};
