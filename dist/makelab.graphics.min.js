function t(t){return t*(180/Math.PI)}function e(t,e,r){return(1-r)*t+r*e}function r(t,r,g){t=a(t),r=a(r);return`rgba(${Math.round(e(t.r,r.r,g))}, ${Math.round(e(t.g,r.g,g))}, ${Math.round(e(t.b,r.b,g))}, ${e(t.a||1,r.a||1,g)})`}function a(t){if("string"==typeof t){if(g[t.toLowerCase()])return g[t.toLowerCase()];const e=t.match(/^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3}|[0-9a-fA-F]{8})$/);if(e){const t=e[1];return 8===t.length?{r:parseInt(t.substring(0,2),16),g:parseInt(t.substring(2,4),16),b:parseInt(t.substring(4,6),16),a:parseInt(t.substring(6,8),16)/255}:{r:parseInt(t.substring(0,2),16),g:parseInt(t.substring(2,4),16),b:parseInt(t.substring(4,6),16),a:1}}if(t.startsWith("rgb")){const e=t.match(/rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?\)/);if(e){const[,t,r,a,g]=e;return{r:parseInt(t),g:parseInt(r),b:parseInt(a),a:void 0!==g?parseFloat(g):1}}}throw new Error(`Invalid color string: ${t}`)}return t}const g={aliceblue:{r:240,g:248,b:255,a:1},antiquewhite:{r:250,g:235,b:215,a:1},aqua:{r:0,g:255,b:255,a:1},aquamarine:{r:127,g:255,b:212,a:1},azure:{r:240,g:255,b:255,a:1},beige:{r:245,g:245,b:220,a:1},bisque:{r:255,g:228,b:196,a:1},black:{r:0,g:0,b:0,a:1},blanchedalmond:{r:255,g:235,b:205,a:1},blue:{r:0,g:0,b:255,a:1},blueviolet:{r:138,g:43,b:226,a:1},brown:{r:165,g:42,b:42,a:1},burlywood:{r:222,g:184,b:135,a:1},cadetblue:{r:95,g:158,b:160,a:1},chartreuse:{r:127,g:255,b:0,a:1},chocolate:{r:210,g:105,b:30,a:1},coral:{r:255,g:127,b:80,a:1},cornflowerblue:{r:100,g:149,b:237,a:1},cornsilk:{r:255,g:248,b:220,a:1},crimson:{r:220,g:20,b:60,a:1},cyan:{r:0,g:255,b:255,a:1},darkblue:{r:0,g:0,b:139,a:1},darkcyan:{r:0,g:139,b:139,a:1},darkgoldenrod:{r:184,g:134,b:11,a:1},darkgray:{r:169,g:169,b:169,a:1},darkgreen:{r:0,g:100,b:0,a:1},darkkhaki:{r:189,g:183,b:107,a:1},darkmagenta:{r:139,g:0,b:139,a:1},darkolivegreen:{r:85,g:107,b:47,a:1},darkorange:{r:255,g:140,b:0,a:1},darkorchid:{r:153,g:50,b:204,a:1},darkred:{r:139,g:0,b:0,a:1},darksalmon:{r:233,g:150,b:122,a:1},darkseagreen:{r:143,g:188,b:143,a:1},darkslateblue:{r:72,g:61,b:139,a:1},darkslategray:{r:47,g:79,b:79,a:1},darkturquoise:{r:0,g:206,b:209,a:1},darkviolet:{r:148,g:0,b:211,a:1},deeppink:{r:255,g:20,b:147,a:1},deepskyblue:{r:0,g:191,b:255,a:1},dimgray:{r:105,g:105,b:105,a:1},dodgerblue:{r:30,g:144,b:255,a:1},firebrick:{r:178,g:34,b:34,a:1},floralwhite:{r:255,g:250,b:240,a:1},forestgreen:{r:34,g:139,b:34,a:1},fuchsia:{r:255,g:0,b:255,a:1},gainsboro:{r:220,g:220,b:220,a:1},ghostwhite:{r:248,g:248,b:255,a:1},gold:{r:255,g:215,b:0,a:1},goldenrod:{r:218,g:165,b:32,a:1},gray:{r:128,g:128,b:128,a:1},green:{r:0,g:128,b:0,a:1},greenyellow:{r:173,g:255,b:47,a:1},honeydew:{r:240,g:255,b:240,a:1},hotpink:{r:255,g:105,b:180,a:1},indianred:{r:205,g:92,b:92,a:1},indigo:{r:75,g:0,b:130,a:1},ivory:{r:255,g:255,b:240,a:1},khaki:{r:240,g:230,b:140,a:1},lavender:{r:230,g:230,b:250,a:1},lavenderblush:{r:255,g:240,b:245,a:1},lawngreen:{r:124,g:252,b:0,a:1},lemonchiffon:{r:255,g:250,b:205,a:1},lightblue:{r:173,g:216,b:230,a:1},lightcoral:{r:240,g:128,b:128,a:1},lightcyan:{r:224,g:255,b:255,a:1},lightgoldenrodyellow:{r:250,g:250,b:210,a:1},lightgray:{r:211,g:211,b:211,a:1},lightgreen:{r:144,g:238,b:144,a:1},lightpink:{r:255,g:182,b:193,a:1},lightsalmon:{r:255,g:160,b:122,a:1},lightseagreen:{r:32,g:178,b:170,a:1},lightskyblue:{r:135,g:206,b:250,a:1},lightslategray:{r:119,g:136,b:153,a:1},lightsteelblue:{r:176,g:196,b:222,a:1},lightyellow:{r:255,g:255,b:224,a:1},lime:{r:0,g:255,b:0,a:1},limegreen:{r:50,g:205,b:50,a:1},linen:{r:250,g:240,b:230,a:1},magenta:{r:255,g:0,b:255,a:1},maroon:{r:128,g:0,b:0,a:1},mediumaquamarine:{r:102,g:205,b:170,a:1},mediumblue:{r:0,g:0,b:205,a:1},mediumorchid:{r:186,g:85,b:211,a:1},mediumpurple:{r:147,g:112,b:219,a:1},mediumseagreen:{r:60,g:179,b:113,a:1},mediumslateblue:{r:123,g:104,b:238,a:1},mediumspringgreen:{r:0,g:250,b:154,a:1},mediumturquoise:{r:72,g:209,b:204,a:1},mediumvioletred:{r:199,g:21,b:133,a:1},midnightblue:{r:25,g:25,b:112,a:1},mintcream:{r:245,g:255,b:250,a:1},mistyrose:{r:255,g:228,b:225,a:1},moccasin:{r:255,g:228,b:181,a:1},navajowhite:{r:255,g:222,b:173,a:1},navy:{r:0,g:0,b:128,a:1},oldlace:{r:253,g:245,b:230,a:1},olive:{r:128,g:128,b:0,a:1},olivedrab:{r:107,g:142,b:35,a:1},orange:{r:255,g:165,b:0,a:1},orangered:{r:255,g:69,b:0,a:1},orchid:{r:218,g:112,b:214,a:1},palegoldenrod:{r:238,g:232,b:170,a:1},palegreen:{r:152,g:251,b:152,a:1},paleturquoise:{r:175,g:238,b:238,a:1},palevioletred:{r:219,g:112,b:147,a:1},papayawhip:{r:255,g:239,b:213,a:1},peachpuff:{r:255,g:218,b:185,a:1},peru:{r:205,g:133,b:63,a:1},pink:{r:255,g:192,b:203,a:1},plum:{r:221,g:160,b:221,a:1},powderblue:{r:176,g:224,b:230,a:1},purple:{r:128,g:0,b:128,a:1},rebeccapurple:{r:102,g:51,b:153,a:1},red:{r:255,g:0,b:0,a:1},rosybrown:{r:188,g:143,b:143,a:1},royalblue:{r:65,g:105,b:225,a:1},saddlebrown:{r:139,g:69,b:19,a:1},salmon:{r:250,g:128,b:114,a:1},sandybrown:{r:244,g:164,b:96,a:1},seagreen:{r:46,g:139,b:87,a:1},seashell:{r:255,g:245,b:238,a:1},sienna:{r:160,g:82,b:45,a:1},silver:{r:192,g:192,b:192,a:1},skyblue:{r:135,g:206,b:235,a:1},slateblue:{r:106,g:90,b:205,a:1},slategray:{r:112,g:128,b:144,a:1},snow:{r:255,g:250,b:250,a:1},springgreen:{r:0,g:255,b:127,a:1},steelblue:{r:70,g:130,b:180,a:1},tan:{r:210,g:180,b:140,a:1},teal:{r:0,g:128,b:128,a:1},thistle:{r:216,g:191,b:216,a:1},tomato:{r:255,g:99,b:71,a:1},turquoise:{r:64,g:224,b:208,a:1},violet:{r:238,g:130,b:238,a:1},wheat:{r:245,g:222,b:179,a:1},white:{r:255,g:255,b:255,a:1},whitesmoke:{r:245,g:245,b:245,a:1},yellow:{r:255,g:255,b:0,a:1},yellowgreen:{r:154,g:205,b:50,a:1}};class i{constructor(t,e){this.x=t,this.y=e}add(t){return new i(this.x+t.x,this.y+t.y)}subtract(t){return new i(this.x-t.x,this.y-t.y)}multiply(t){return new i(this.x*t,this.y*t)}divide(t){return new i(this.x/t,this.y/t)}magnitude(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const t=this.magnitude();return new i(this.x/t,this.y/t)}dotProduct(t){return this.x*t.x+this.y*t.y}angleBetween(t){const e=this.dotProduct(t),r=this.magnitude()*t.magnitude();if(Math.abs(e-r)<Number.EPSILON)return e>=0?0:Math.PI;if(0===r)return 0;const a=e/r;let g=Math.acos(a);return this.x*t.y-this.y*t.x<0&&(g=2*Math.PI-g),g}toString(){return`(${this.x}, ${this.y})`}static fromPoints(t,e){return new i(e.x-t.x,e.y-t.y)}}class s{constructor(t,e,r,a){2==arguments.length&&"object"==typeof t&&"object"==typeof e?(this.pt1=t,this.pt2=e):(this.pt1=new i(t,e),this.pt2=new i(r,a)),this.fontSize=10,this.strokeColor="black",this.isDashedLine=!1,this.drawTextLabels=!0,this.drawTextMagnitude=!0,this.drawTextAngle=!0,this.strokeWeight=2}get x1(){return this.pt1.x}set x1(t){this.pt1.x=t}get y1(){return this.pt1.y}set y1(t){this.pt1.y=t}get x2(){return this.pt2.x}set x2(t){this.pt2.x=t}get y2(){return this.pt2.y}set y2(t){this.pt2.y=t}getHeading(){const t=this.pt2.subtract(this.pt1);let e=Math.atan2(t.y,t.x);return e<0&&(e+=2*Math.PI),e}getNormals(){return function(t,e){const r=e.subtract(t);return[new i(r.y,-r.x),new i(-r.y,r.x)]}(this.pt1,this.pt2)}getNormal(){return this.getNormals()[0]}getVectorAtOrigin(){return this.pt2.subtract(this.pt1)}getAnglesBetween(e){const r=this.getVectorAtOrigin();let a;a=e instanceof s?e.getVectorAtOrigin():e;let g=r.angleBetween(a);console.log(`angleBetweenDegrees: ${t(g).toFixed(1)}`),g<0&&(g+=2*Math.PI);const i=g;return{counterclockwiseAngle:2*Math.PI-g,clockwiseAngle:i}}getOrthogonalProjection(t){const e=this.pt2.subtract(this.pt1),r=t.subtract(this.pt1),a=e.magnitude(),g=Math.min(Math.max(r.dotProduct(e.normalize()),0),a);return this.pt1.add(e.multiply(g))}getDistance(t){const e=this.getOrthogonalProjection(t);return t.subtract(e).magnitude()}getMagnitude(){return this.pt2.subtract(this.pt1).magnitude()}setMagnitude(t){const e=this.pt2.subtract(this.pt1).normalize().multiply(t);this.pt2=this.pt1.add(e)}draw(t){if(t.strokeStyle=this.strokeColor,t.lineWidth=this.strokeWeight,this.isDashedLine&&t.setLineDash([5,15]),this.drawArrow(t,this.pt1,this.pt2.subtract(this.pt1),this.strokeColor),this.drawTextLabels){t.font=`${this.fontSize}px Arial`,t.textAlign="left",t.textBaseline="top",t.fillStyle=this.strokeColor;const e=this.generateLabel(),r=t.measureText(e).width;t.fillText(e,-r-3,12)}}drawArrow(t,e,r,a){const g=10,i=Math.atan2(r.y,r.x);t.save(),t.strokeStyle=a,t.fillStyle=a,t.beginPath(),t.moveTo(e.x,e.y),t.lineTo(e.x+r.x,e.y+r.y),t.stroke(),t.beginPath(),t.moveTo(e.x+r.x,e.y+r.y),t.lineTo(e.x+r.x-g*Math.cos(i-Math.PI/6),e.y+r.y-g*Math.sin(i-Math.PI/6)),t.lineTo(e.x+r.x-g*Math.cos(i+Math.PI/6),e.y+r.y-g*Math.sin(i+Math.PI/6)),t.lineTo(e.x+r.x,e.y+r.y),t.lineTo(e.x+r.x-g*Math.cos(i-Math.PI/6),e.y+r.y-g*Math.sin(i-Math.PI/6)),t.stroke(),t.fill(),t.restore()}generateLabel(){let t="";if(this.drawTextAngle){t+=`${Math.round(180*Math.atan2(this.pt2.y-this.pt1.y,this.pt2.x-this.pt1.x)/Math.PI)}°`}return this.drawTextAngle&&this.drawTextMagnitude&&(t+=" "),this.drawTextMagnitude&&(t+=`|${this.getMagnitude().toFixed(1)}|`),t}static drawAngleArcs(e,r,a,g="blue",s="red",n=50,o=30){const l=r.getHeading(),b=r.getAnglesBetween(a);console.log(`CW angle ${t(b.clockwiseAngle).toFixed(1)} CCW angle ${t(b.counterclockwiseAngle).toFixed(1)}`),e.save(),e.beginPath(),e.arc(r.pt1.x,r.pt1.y,n,l,l+b.clockwiseAngle,!1),e.strokeStyle=g,e.stroke();const h=new i(r.pt1.x+1.35*n*Math.cos(l+b.clockwiseAngle/2),r.pt1.y+1.35*n*Math.sin(l+b.clockwiseAngle/2));e.font="12px Arial",e.textAlign="center",e.textBaseline="middle",e.fillStyle=g;const u=`${t(b.clockwiseAngle).toFixed(1)}°`;e.fillText(u,h.x,h.y),e.beginPath(),e.arc(r.pt1.x,r.pt1.y,o,l,l-b.counterclockwiseAngle,!0),e.strokeStyle=s,e.stroke();const c=new i(r.pt1.x+1.5*o*Math.cos(l-b.counterclockwiseAngle/2),r.pt1.y+1.5*o*Math.sin(l-b.counterclockwiseAngle/2)),d=`${t(b.counterclockwiseAngle).toFixed(1)}°`;e.fillStyle=s,e.fillText(d,c.x,c.y),e.restore()}}export{s as LineSegment,a as convertColorStringToObject,r as lerpColor};
